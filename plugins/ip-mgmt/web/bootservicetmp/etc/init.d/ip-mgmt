#!/bin/bash
#
# htvcenter Enterprise developed by htvcenter Enterprise GmbH.
#
# All source code and content (c) Copyright 2014, htvcenter Enterprise GmbH unless specifically noted otherwise.
#
# This source code is released under the htvcenter Enterprise Server and Client License, unless otherwise agreed with htvcenter Enterprise GmbH.
# The latest version of this license can be found here: http://htvcenter-enterprise.com/license
#
# By using this software, you acknowledge having read this license and agree to be bound thereby.
#
#           http://htvcenter-enterprise.com
#
# Copyright 2014, htvcenter Enterprise GmbH <info@htvcenter-enterprise.com>


htvcenter_SERVER_BASE_DIR=$(pushd $(dirname $0)/../../../../.. > /dev/null; echo $PWD; popd > /dev/null)
export htvcenter_SOURCE_DIR="$htvcenter_SERVER_BASE_DIR/htvcenter/"
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-package-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/ip-mgmt/include/htvcenter-plugin-ip-mgmt-functions
if [ -f $htvcenter_RESOURCE_PARAMETER_FILE ]; then
	. $htvcenter_RESOURCE_PARAMETER_FILE
	htvcenter_SERVER_IP=$resource_htvcenterserver
elif [ -f $htvcenter_SERVER_BASE_DIR/htvcenter/etc/htvcenter-server.conf ]; then
	. $htvcenter_SERVER_BASE_DIR/htvcenter/etc/htvcenter-server.conf
	. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-server-functions
	htvcenter_server_get_config
	htvcenter_SERVER_IP=$htvcenter_SERVER_IP_ADDRESS
fi
IP_MGMT_CONFIG_DIR=`dirname $htvcenter_RESOURCE_PARAMETER_FILE`

# define wget to use with https
if [ "$htvcenter_web_protocol" == "https" ]; then
	export WGET="wget --no-check-certificate -q"
else
	export WGET="wget -q"
fi

# do not start on the intitrd
if [ -f /etc/initrd-devices.conf ]; then
	exit 0
fi


function ip_mgmt_start() {
	echo "Starting the htvcenter ip-mgmt plugin"
	eval $appliance_capabilities
	if [ "$IPT" != "" ]; then
		IP_TOKEN=`echo $IPT | cut -d'=' -f1`
		echo "- getting network configuration for token $IP_TOKEN"
		# get config per nics
		for APP_NIC in $(seq 1 $resource_nics); do
			echo "- getting configuration for Network-card $APP_NIC"
			if ! $WGET -O $IP_MGMT_CONFIG_DIR/htvcenter-network.$APP_NIC.conf "$htvcenter_web_protocol://${resource_htvcenterserver}/htvcenter/boot-service/ip-mgmt-appliance-config.php?ip_mgmt_command=get_config&appliance_id=$appliance_id&ip_mgmt_nic_id=$APP_NIC&ip_mgmt_token=$IP_TOKEN"; then
				echo "ERROR: Could not get ip-configuration from htvcenter-server at ${resource_htvcenterserver}!"
			fi
		done

#		htvcenter_INTERFACE=`ifconfig | grep -i $resource_mac | grep :oq | cut -d':' -f1`
#		if [ "$htvcenter_INTERFACE" == "" ]; then
#			htvcenter_INTERFACE="bond0"
#		fi
		EXTERNAL_INTERFACES_LIST=`ifconfig -a | grep eth | awk {' print $1 '} | sort`
		NIC_COUNT=1
		unset IPADDRESS
		for INTERFACE in $EXTERNAL_INTERFACES_LIST; do
			# source network config per nic
			. $IP_MGMT_CONFIG_DIR/htvcenter-network.$NIC_COUNT.conf
			if [ "$IPADDRESS" != "" ]; then
				echo "- configuring Network-card $INTERFACE  ($NIC_COUNT)"
				ifconfig $INTERFACE $IPADDRESS netmask $SUBNET up
				# configure the route, make sure there is just one default route
				for CURRENT_DEFAULT_ROUTE in `route -n | grep ^0.0.0.0 | awk {' print $2 '}`; do
					CURRENT_DEFAULT_ROUTE_INTERFACE=`route -n | grep ^0.0.0.0 | grep $CURRENT_DEFAULT_ROUTE | awk {' print $8 '}`
					route del default gw $CURRENT_DEFAULT_ROUTE 1>/dev/null 2>&1
					route del default gw $CURRENT_DEFAULT_ROUTE $CURRENT_DEFAULT_ROUTE_INTERFACE 1>/dev/null 2>&1
				done
				route add default gw $GATEWAY
				# configure /etc/resolv.conf
				> /etc/resolv.conf
				echo "domain $DOMAIN" >> /etc/resolv.conf
				echo "search $DOMAIN" >> /etc/resolv.conf
				echo "nameserver $DNS1" >> /etc/resolv.conf
				echo "nameserver $DNS2" >> /etc/resolv.conf
			fi
			NIC_COUNT=$(( $NIC_COUNT + 1 ))
			unset IPADDRESS
		done





	fi

}


function ip_mgmt_stop() {
	echo "Stopping the htvcenter ip-mgmt plugin"

}



case "$1" in
	start)
		ip_mgmt_start
		;;
	stop)
		ip_mgmt_stop
		;;
	restart)
		ip_mgmt_start
		sleep 1
		ip_mgmt_stop
		;;
	*)
		echo "Usage: $0 {start|stop|restart}"
		exit 1

esac
exit $?













