#!/bin/bash
# this script automatically manages vmware-esx networks (vswitch + porgroups)
#
# htvcenter Enterprise developed by htvcenter Enterprise GmbH.
#
# All source code and content (c) Copyright 2014, htvcenter Enterprise GmbH unless specifically noted otherwise.
#
# This source code is released under the htvcenter Enterprise Server and Client License, unless otherwise agreed with htvcenter Enterprise GmbH.
# The latest version of this license can be found here: http://htvcenter-enterprise.com/license
#
# By using this software, you acknowledge having read this license and agree to be bound thereby.
#
#           http://htvcenter-enterprise.com
#
# Copyright 2014, htvcenter Enterprise GmbH <info@htvcenter-enterprise.com>
#
htvcenter_SERVER_BASE_DIR=$(dirname $0)/../../../..
htvcenter_SERVER_BASE_DIR=$(pushd $htvcenter_SERVER_BASE_DIR > /dev/null && echo $PWD && popd > /dev/null)
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-functions
# unblock starting command queue early for non-blocking + ui commands
VMWARE_ESX_COMMAND=$1
if [ "$VMWARE_ESX_COMMAND" == "post_net_config" ] || [ "$VMWARE_ESX_COMMAND" == "list" ]; then
	htvcenter_unblock_starting_queue $@
	NON_BLOCKING=true
fi

export htvcenter_SOURCE_DIR="$htvcenter_SERVER_BASE_DIR/htvcenter/"
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-package-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/include/htvcenter-plugin-vmware-esx-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/etc/htvcenter-plugin-vmware-esx.conf
. $htvcenter_SERVER_BASE_DIR/htvcenter/etc/htvcenter-server.conf
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-server-functions
htvcenter_server_get_config
export resource_htvcenterserver=$htvcenter_SERVER_IP_ADDRESS
htvcenter_VMWARE_ESX_HOST_CONF_DIR="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/conf/host"
htvcenter_VMWARE_ESX_STAT_DIR="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/web/vmware-esx-stat/"
export LANG=C
ORG_IFS="$IFS"

# http://communities.vmware.com/thread/240659?tstart=0
export PERL_LWP_SSL_VERIFY_HOSTNAME=0

# let only root run this script
WHOAMI=`whoami`
if [ "$WHOAMI" != "root" ]; then
	echo "ERROR: Please run this script as root!"
	exit 6
fi
# make sure required deps are installed
if ! check_vmware_esx_deps; then
	if [ "$NON_BLOCKING" != "true" ]; then
		htvcenter_unblock_starting_queue $@
	fi
	exit 1
fi

if [ ! -d "$htvcenter_VMWARE_ESX_HOST_CONF_DIR" ]; then
	mkdir -p $htvcenter_VMWARE_ESX_HOST_CONF_DIR
fi
if [ ! -d "$htvcenter_VMWARE_ESX_STAT_DIR" ]; then
	mkdir -p $htvcenter_VMWARE_ESX_STAT_DIR
	chmod 777 $htvcenter_VMWARE_ESX_STAT_DIR
fi


function vmware_esx_usage() {
	echo "Usage : $0 add_vs <-i esx-server-ip> <-n vs-name> [-p ports]"
	echo "        $0 remove_vs <-i esx-server-ip> <-n vs-name>"
	echo "        $0 add_vs_up <-i esx-server-ip> <-n vs-name> <-u uplink>"
	echo "        $0 remove_vs_up <-i esx-server-ip> <-n vs-name> <-u uplink>"
	echo "        $0 add_pg <-i esx-server-ip> <-n vs-name> <-g portgroup> [-v vlan-id]"
	echo "        $0 remove_pg <-i esx-server-ip> <-n vs-name> <-g portgroup>"
	echo "        $0 add_pg_up <-i esx-server-ip> <-n vs-name> <-g portgroup> <-u uplink>"
	echo "        $0 remove_pg_up <-i esx-server-ip> <-n vs-name> <-g portgroup> <-u uplink>"
	echo "        $0 list <-i esx-server-ip>"
	echo "        $0 post_net_config <-i esx-server-ip>"
	echo ""
	echo "Optional parameters:"
	echo "             [--htvcenter-ui-user <username>]"
	echo "             [--htvcenter-internal-cmd <true/false>]"
	exit 1
}



FULL_COMMANDLINE="$0 $@"
VMWARE_ESX_COMMAND=$1
shift
while [ $# -ne 0 ]; do
	case "$1" in
		-i)
			VMWARE_ESX_HOST_IP=$2
			shift
			;;
		-n)
			VMWARE_ESX_VSWITCH_NAME=$2
			shift
			;;
		-p)
			VMWARE_ESX_VSWITCH_PORTS=$2
			shift
			;;
		-g)
			VMWARE_ESX_PORTGROUP_NAME=$2
			shift
			;;
		-u)
			VMWARE_ESX_UPLINK=$2
			shift
			;;
		-v)
			VMWARE_ESX_PORTGROUP_VLAN_ID=$2
			shift
			;;
		--htvcenter-ui-user)
			htvcenter_UI_USER=$2
			shift
			;;
		--htvcenter-internal-cmd)
			htvcenter_INTERNAL_CMD=$2
			shift
			;;
		--htvcenter-cmd-mode)
			htvcenter_CMD_MODE=$2
			shift
			;;

		*)
			if [ "$NON_BLOCKING" != "true" ]; then
				htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			fi
			echo "ERROR: Free commandline arguments are not allowed"
			vmware_esx_usage
			exit 6
			;;
	esac
	shift
done


# command set ?
if [ "$VMWARE_ESX_COMMAND" == "" ]; then
	htvcenter_post_event 0 "parameter_check" 3 "htvcenter-vmware-esx-network" "Wrong usage, no command given!"
	htvcenter_unblock_starting_queue $FULL_COMMANDLINE
	vmware_esx_usage
fi
# ESX ip set ?
if [ "$VMWARE_ESX_HOST_IP" == "" ]; then
	htvcenter_post_event 0 "parameter_check" 3 "htvcenter-vmware-esx-network" "Wrong usage, no VMware ESX ip-adress given!"
	if [ "$NON_BLOCKING" != "true" ]; then
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE
	fi
	vmware_esx_usage
fi
# host configured ?
if [ ! -f "$htvcenter_VMWARE_ESX_HOST_CONF_DIR/$VMWARE_ESX_HOST_IP.conf" ]; then
	htvcenter_post_event 0 "parameter_check" 3 "htvcenter-vmware-esx-network" "VMware ESX Host configuration missing! Please create the configuration first."
	if [ "$NON_BLOCKING" != "true" ]; then
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE
	fi
	vmware_esx_usage
else
	# source the host configuration
	. $htvcenter_VMWARE_ESX_HOST_CONF_DIR/$VMWARE_ESX_HOST_IP.conf
fi
if [ "$htvcenter_UI_USER" != "" ]; then
	htvcenter_UI_USER_PARAMETER=" --htvcenter-ui-user $htvcenter_UI_USER"
fi

# main
case "$VMWARE_ESX_COMMAND" in


	add_vs)
		# check requirements
		if [ "$VMWARE_ESX_VSWITCH_NAME" == "" ]; then
			htvcenter_post_event 0 "add_vs" 3 "htvcenter-vmware-esx-network" "Wrong usage, VSwitch Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_esx_usage
		fi
		if [ "$VMWARE_ESX_VSWITCH_PORTS" == "" ]; then
			VS_PORTS="--port 128"
		else
			VS_PORTS="--port $VMWARE_ESX_VSWITCH_PORTS"
		fi

		LOCK_TIME=`htvcenter_lock_queue aquire vmware-esx`
		trap "htvcenter_lock_queue release vmware-esx $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		# use API to create the vswitch
		if ! $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/bin/perl/esxcfg-vswitch-lamw-mod.pl -a $VMWARE_ESX_VSWITCH_NAME $VS_PORTS; then
			htvcenter_post_event 0 "add_vs" 3 "htvcenter-vmware-esx-network" "Failed to create VSwitch $VMWARE_ESX_VSWITCH_NAME on ESX Host $VMWARE_ESX_HOST_IP!"

			htvcenter_lock_queue release vmware-esx $LOCK_TIME
			trap '' EXIT

			exit 1
		fi

		htvcenter_lock_queue release vmware-esx $LOCK_TIME
		trap '' EXIT

		$0 post_net_config -i $VMWARE_ESX_HOST_IP --htvcenter-internal-cmd true
		;;

	remove_vs)
		# check requirements
		if [ "$VMWARE_ESX_VSWITCH_NAME" == "" ]; then
			htvcenter_post_event 0 "remove_vs" 3 "htvcenter-vmware-esx-network" "Wrong usage, VSwitch Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_esx_usage
		fi

		LOCK_TIME=`htvcenter_lock_queue aquire vmware-esx`
		trap "htvcenter_lock_queue release vmware-esx $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		# use API to remove the vswitch
		if ! $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/bin/perl/esxcfg-vswitch-lamw-mod.pl -d $VMWARE_ESX_VSWITCH_NAME; then
			htvcenter_post_event 0 "remove_vs" 3 "htvcenter-vmware-esx-network" "Failed to remove VSwitch $VMWARE_ESX_VSWITCH_NAME on ESX Host $VMWARE_ESX_HOST_IP!"

			htvcenter_lock_queue release vmware-esx $LOCK_TIME
			trap '' EXIT

			exit 1
		fi

		htvcenter_lock_queue release vmware-esx $LOCK_TIME
		trap '' EXIT

		$0 post_net_config -i $VMWARE_ESX_HOST_IP --htvcenter-internal-cmd true
		;;

	add_vs_up)
		# check requirements
		if [ "$VMWARE_ESX_VSWITCH_NAME" == "" ]; then
			htvcenter_post_event 0 "add_vs_up" 3 "htvcenter-vmware-esx-network" "Wrong usage, VSwitch Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_esx_usage
		fi
		if [ "$VMWARE_ESX_UPLINK" == "" ]; then
			htvcenter_post_event 0 "add_vs_up" 3 "htvcenter-vmware-esx-network" "Wrong usage, Uplink Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_esx_usage
		fi

		LOCK_TIME=`htvcenter_lock_queue aquire vmware-esx`
		trap "htvcenter_lock_queue release vmware-esx $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		# use API to add the uplink to the vswitch
		if ! $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/bin/perl/esxcfg-vswitch-lamw-mod.pl --link $VMWARE_ESX_UPLINK $VMWARE_ESX_VSWITCH_NAME; then
			htvcenter_post_event 0 "add_vs_up" 3 "htvcenter-vmware-esx-network" "Failed to add uplink $VMWARE_ESX_UPLINK to VSwitch $VMWARE_ESX_VSWITCH_NAME on ESX Host $VMWARE_ESX_HOST_IP!"

			htvcenter_lock_queue release vmware-esx $LOCK_TIME
			trap '' EXIT

			exit 1
		fi

		htvcenter_lock_queue release vmware-esx $LOCK_TIME
		trap '' EXIT

		$0 post_net_config -i $VMWARE_ESX_HOST_IP --htvcenter-internal-cmd true
		;;

	remove_vs_up)
		# check requirements
		if [ "$VMWARE_ESX_VSWITCH_NAME" == "" ]; then
			htvcenter_post_event 0 "remove_vs_up" 3 "htvcenter-vmware-esx-network" "Wrong usage, VSwitch Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_esx_usage
		fi
		if [ "$VMWARE_ESX_UPLINK" == "" ]; then
			htvcenter_post_event 0 "remove_vs_up" 3 "htvcenter-vmware-esx-network" "Wrong usage, Uplink Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_esx_usage
		fi

		LOCK_TIME=`htvcenter_lock_queue aquire vmware-esx`
		trap "htvcenter_lock_queue release vmware-esx $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		if ! $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/bin/perl/esxcfg-vswitch-lamw-mod.pl --unlink $VMWARE_ESX_UPLINK $VMWARE_ESX_VSWITCH_NAME; then
			htvcenter_post_event 0 "remove_vs_up" 3 "htvcenter-vmware-esx-network" "Failed to remove uplink $VMWARE_ESX_UPLINK to VSwitch $VMWARE_ESX_VSWITCH_NAME on ESX Host $VMWARE_ESX_HOST_IP!"

			htvcenter_lock_queue release vmware-esx $LOCK_TIME
			trap '' EXIT

			exit 1
		fi

		htvcenter_lock_queue release vmware-esx $LOCK_TIME
		trap '' EXIT

		$0 post_net_config -i $VMWARE_ESX_HOST_IP --htvcenter-internal-cmd true
		;;


	add_pg)
		# check requirements
		if [ "$VMWARE_ESX_VSWITCH_NAME" == "" ]; then
			htvcenter_post_event 0 "add_pg" 3 "htvcenter-vmware-esx-network" "Wrong usage, VSwitch Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_esx_usage
		fi
		if [ "$VMWARE_ESX_PORTGROUP_NAME" == "" ]; then
			htvcenter_post_event 0 "add_pg" 3 "htvcenter-vmware-esx-network" "Wrong usage, Portgroup Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_esx_usage
		fi

		LOCK_TIME=`htvcenter_lock_queue aquire vmware-esx`
		trap "htvcenter_lock_queue release vmware-esx $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		VMWARE_ESX_PORTGROUP_NAME=`echo $VMWARE_ESX_PORTGROUP_NAME | sed -e "s/@/ /g"`
		if ! $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/bin/perl/esxcfg-vswitch-lamw-mod.pl --add-pg "$VMWARE_ESX_PORTGROUP_NAME" $VMWARE_ESX_VSWITCH_NAME; then
			htvcenter_post_event 0 "add_pg" 3 "htvcenter-vmware-esx-network" "Failed to add portgroup $VMWARE_ESX_PORTGROUP_NAME to VSwitch $VMWARE_ESX_VSWITCH_NAME on ESX Host $VMWARE_ESX_HOST_IP!"

			htvcenter_lock_queue release vmware-esx $LOCK_TIME
			trap '' EXIT

			exit 1
		fi
		# vlan ?
		if [ "$VMWARE_ESX_PORTGROUP_VLAN_ID" != "" ]; then
			if ! $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/bin/perl/esxcfg-vswitch-lamw-mod.pl -p "$VMWARE_ESX_PORTGROUP_NAME" --vlan $VMWARE_ESX_PORTGROUP_VLAN_ID $VMWARE_ESX_VSWITCH_NAME; then
				htvcenter_post_event 0 "add_pg" 3 "htvcenter-vmware-esx-network" "Failed to set VLAN $VMWARE_ESX_PORTGROUP_VLAN_ID to portgroup $VMWARE_ESX_PORTGROUP_NAME VSwitch $VMWARE_ESX_VSWITCH_NAME on ESX Host $VMWARE_ESX_HOST_IP!"

				htvcenter_lock_queue release vmware-esx $LOCK_TIME
				trap '' EXIT

				exit 1
			fi
		fi

		htvcenter_lock_queue release vmware-esx $LOCK_TIME
		trap '' EXIT

		$0 post_net_config -i $VMWARE_ESX_HOST_IP --htvcenter-internal-cmd true
		;;

	remove_pg)
		# check requirements
		if [ "$VMWARE_ESX_VSWITCH_NAME" == "" ]; then
			htvcenter_post_event 0 "remove_pg" 3 "htvcenter-vmware-esx-network" "Wrong usage, VSwitch Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_esx_usage
		fi
		if [ "$VMWARE_ESX_PORTGROUP_NAME" == "" ]; then
			htvcenter_post_event 0 "remove_pg" 3 "htvcenter-vmware-esx-network" "Wrong usage, Portgroup Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_esx_usage
		fi

		LOCK_TIME=`htvcenter_lock_queue aquire vmware-esx`
		trap "htvcenter_lock_queue release vmware-esx $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		VMWARE_ESX_PORTGROUP_NAME=`echo $VMWARE_ESX_PORTGROUP_NAME | sed -e "s/@/ /g"`
		if ! $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/bin/perl/esxcfg-vswitch-lamw-mod.pl --del-pg "$VMWARE_ESX_PORTGROUP_NAME" $VMWARE_ESX_VSWITCH_NAME; then
			htvcenter_post_event 0 "remove_pg" 3 "htvcenter-vmware-esx-network" "Failed to remove portgroup $VMWARE_ESX_PORTGROUP_NAME to VSwitch $VMWARE_ESX_VSWITCH_NAME on ESX Host $VMWARE_ESX_HOST_IP!"

			htvcenter_lock_queue release vmware-esx $LOCK_TIME
			trap '' EXIT

			exit 1
		fi

		htvcenter_lock_queue release vmware-esx $LOCK_TIME
		trap '' EXIT

		$0 post_net_config -i $VMWARE_ESX_HOST_IP --htvcenter-internal-cmd true
		;;

	add_pg_up)
		# check requirements
		if [ "$VMWARE_ESX_VSWITCH_NAME" == "" ]; then
			htvcenter_post_event 0 "add_pg_up" 3 "htvcenter-vmware-esx-network" "Wrong usage, VSwitch Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_esx_usage
		fi
		if [ "$VMWARE_ESX_PORTGROUP_NAME" == "" ]; then
			htvcenter_post_event 0 "add_pg_up" 3 "htvcenter-vmware-esx-network" "Wrong usage, Portgroup Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_esx_usage
		fi
		if [ "$VMWARE_ESX_UPLINK" == "" ]; then
			htvcenter_post_event 0 "add_pg_up" 3 "htvcenter-vmware-esx-network" "Wrong usage, Uplink Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_esx_usage
		fi

		LOCK_TIME=`htvcenter_lock_queue aquire vmware-esx`
		trap "htvcenter_lock_queue release vmware-esx $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		VMWARE_ESX_PORTGROUP_NAME=`echo $VMWARE_ESX_PORTGROUP_NAME | sed -e "s/@/ /g"`
		if ! $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/bin/perl/esxcfg-vswitch-lamw-mod.pl --add-pg-uplink $VMWARE_ESX_UPLINK --pg "$VMWARE_ESX_PORTGROUP_NAME" $VMWARE_ESX_VSWITCH_NAME; then
			htvcenter_post_event 0 "add_pg_up" 3 "htvcenter-vmware-esx-network" "Failed to add uplink $VMWARE_ESX_UPLINK to portgroup $VMWARE_ESX_PORTGROUP_NAME VSwitch $VMWARE_ESX_VSWITCH_NAME on ESX Host $VMWARE_ESX_HOST_IP!"

			htvcenter_lock_queue release vmware-esx $LOCK_TIME
			trap '' EXIT

			exit 1
		fi

		htvcenter_lock_queue release vmware-esx $LOCK_TIME
		trap '' EXIT

		$0 post_net_config -i $VMWARE_ESX_HOST_IP --htvcenter-internal-cmd true
		;;

	remove_pg_up)
		# check requirements
		if [ "$VMWARE_ESX_VSWITCH_NAME" == "" ]; then
			htvcenter_post_event 0 "remove_pg_up" 3 "htvcenter-vmware-esx-network" "Wrong usage, VSwitch Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_esx_usage
		fi
		if [ "$VMWARE_ESX_PORTGROUP_NAME" == "" ]; then
			htvcenter_post_event 0 "remove_pg_up" 3 "htvcenter-vmware-esx-network" "Wrong usage, Portgroup Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_esx_usage
		fi
		if [ "$VMWARE_ESX_UPLINK" == "" ]; then
			htvcenter_post_event 0 "remove_pg_up" 3 "htvcenter-vmware-esx-network" "Wrong usage, Uplink Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_esx_usage
		fi
		VMWARE_ESX_PORTGROUP_NAME=`echo $VMWARE_ESX_PORTGROUP_NAME | sed -e "s/@/ /g"`

		LOCK_TIME=`htvcenter_lock_queue aquire vmware-esx`
		trap "htvcenter_lock_queue release vmware-esx $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		if ! $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/bin/perl/esxcfg-vswitch-lamw-mod.pl --del-pg-uplink $VMWARE_ESX_UPLINK --pg "$VMWARE_ESX_PORTGROUP_NAME" $VMWARE_ESX_VSWITCH_NAME; then
			htvcenter_post_event 0 "remove_pg_up" 3 "htvcenter-vmware-esx-network" "Failed to remove uplink $VMWARE_ESX_UPLINK to portgroup $VMWARE_ESX_PORTGROUP_NAME VSwitch $VMWARE_ESX_VSWITCH_NAME on ESX Host $VMWARE_ESX_HOST_IP!"

			htvcenter_lock_queue release vmware-esx $LOCK_TIME
			trap '' EXIT

			exit 1
		fi

		htvcenter_lock_queue release vmware-esx $LOCK_TIME
		trap '' EXIT

		$0 post_net_config -i $VMWARE_ESX_HOST_IP --htvcenter-internal-cmd true
		;;

	list)
		# run API command
		$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/bin/perl/esxcfg-vswitch-lamw-mod.pl -l
		;;

	post_net_config)
		mkdir -p $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/web/vmware-esx-stat/
		chmod 777 $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/web/vmware-esx-stat/
		ESX_STATS="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/web/vmware-esx-stat/$VMWARE_ESX_HOST_IP.net_config"
		ESX_STATS_TMP="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/web/vmware-esx-stat/$VMWARE_ESX_HOST_IP.net_config.tmp"
		rm -f $ESX_STATS
		> $ESX_STATS_TMP
#		ESX_NETWORK_DETAILS=`mktemp /tmp/esx-net.XXXXXX` || exit 1
		ESX_NETWORK_DETAILS="/tmp/esx-net.conf"
#		ESX_PORTGROUP_DETAILS=`mktemp /tmp/esx-pg.XXXXXX` || exit 1
		ESX_PORTGROUP_DETAILS="/tmp/esx-pg.conf"
		ESX_NETWORK_BROWSE_COMMAND="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/bin/perl/esxcfg-vswitch-lamw-mod.pl -l"
		$ESX_NETWORK_BROWSE_COMMAND > $ESX_NETWORK_DETAILS
		NEXT_IS_VSWITCH_NAME=false
		NEXT_IS_WRITE_CONFIG_LINE=false
		CONF_VSWITCH_LINE=""

IFS='
'
		for n in `cat $ESX_NETWORK_DETAILS`; do
			if ($NEXT_IS_VSWITCH_NAME); then
				CONF_VSWITCH_LINE="$n"
				NEXT_IS_VSWITCH_NAME=false
				NEXT_IS_WRITE_CONFIG_LINE=true
			fi
			if echo $n | grep "Switch Name" 1>/dev/null; then
				NEXT_IS_VSWITCH_NAME=true
				continue
			fi
			if ($NEXT_IS_WRITE_CONFIG_LINE); then
				CONF_VSWITCH_NAME=`echo $CONF_VSWITCH_LINE | awk '{ print $1 }'`
				CONF_VSWITCH_NUM_PORTS=`echo $CONF_VSWITCH_LINE | awk '{ print $2 }'`
				CONF_VSWITCH_USED_PORTS=`echo $CONF_VSWITCH_LINE | awk '{ print $3 }'`
				CONF_VSWITCH_CONF_PORTS=`echo $CONF_VSWITCH_LINE | awk '{ print $4 }'`
				CONF_VSWITCH_MTU=`echo $CONF_VSWITCH_LINE | awk '{ print $5 }'`
				CONF_VSWITCH_UPLINK=`echo $CONF_VSWITCH_LINE | awk '{ print $6 }'`
				echo "vs""@""$CONF_VSWITCH_NAME""@""$CONF_VSWITCH_NUM_PORTS""@""$CONF_VSWITCH_USED_PORTS""@""$CONF_VSWITCH_CONF_PORTS""@""$CONF_VSWITCH_MTU""@""$CONF_VSWITCH_UPLINK" >> $ESX_STATS_TMP
				# get the portgroups on this vswitch
				cat $ESX_NETWORK_DETAILS | grep -A1000 ^$CONF_VSWITCH_NAME  > $ESX_PORTGROUP_DETAILS
				echo END_OF_FILE >> $ESX_PORTGROUP_DETAILS
				sed '/Switch Name/,/END_OF_FILE/d' $ESX_PORTGROUP_DETAILS > $ESX_PORTGROUP_DETAILS.$CONF_VSWITCH_NAME
				sed -i -e 's/END_OF_FILE//g' $ESX_PORTGROUP_DETAILS.$CONF_VSWITCH_NAME
				sed -i -e '1,3d' $ESX_PORTGROUP_DETAILS.$CONF_VSWITCH_NAME
				sed -i -e '/./,/^$/!d' $ESX_PORTGROUP_DETAILS.$CONF_VSWITCH_NAME
				for p in `cat $ESX_PORTGROUP_DETAILS.$CONF_VSWITCH_NAME`; do

					PG_UPLINK=`echo $p | rev | awk '{ print $1 }' | rev | sed 's/^[ \t]*//' | awk '{ print $1 }' | sed 's/[ \t]*$//'`
					if echo $PG_UPLINK | grep '[a-z][a-z]' 1>/dev/null; then
						# this means we have a portgroup uplink parameter
						PG_NAME=`echo $p | rev | awk '{ print $4" "$5" "$6 }' | rev | sed 's/^[ \t]*//' | awk '{ print $1" "$2 }' | sed 's/[ \t]*$//'`
						PG_VLAN=`echo $p | rev | awk '{ print $3 }' | rev | sed 's/^[ \t]*//' | awk '{ print $1 }' | sed 's/[ \t]*$//'`
						PG_PORTS=`echo $p | rev | awk '{ print $2 }' | rev | sed 's/^[ \t]*//' | awk '{ print $1 }' | sed 's/[ \t]*$//'`
					else
						# this means the portgroup uplink parameter is emptry
						PG_UPLINK=""
						PG_NAME=`echo $p | rev | awk '{ print $3" "$4" "$5 }' | rev | sed 's/^[ \t]*//' | awk '{ print $1" "$2 }' | sed 's/[ \t]*$//'`
						PG_VLAN=`echo $p | rev | awk '{ print $2 }' | rev | sed 's/^[ \t]*//' | awk '{ print $1 }' | sed 's/[ \t]*$//'`
						PG_PORTS=`echo $p | rev | awk '{ print $1 }' | rev | sed 's/^[ \t]*//' | awk '{ print $1 }' | sed 's/[ \t]*$//'`
					fi
					echo "pg""@""$CONF_VSWITCH_NAME""@""$PG_NAME""@""$PG_VLAN""@""$PG_PORTS""@""$PG_UPLINK" >> $ESX_STATS_TMP
				done
				rm -f $ESX_PORTGROUP_DETAILS
				NEXT_IS_WRITE_CONFIG_LINE=false
			fi
		done
		IFS="$ORG_IFS"

		# list of phys nics
		for PNIC in `$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-esx/bin/perl/hostlistnics.pl --vmhost $VI_SERVER_HOSTNAME --list`; do
			echo "pn""@""$PNIC" >> $ESX_STATS_TMP
		done
		/bin/mv $ESX_STATS_TMP $ESX_STATS
		chmod 777 $ESX_STATS
		rm -f $ESX_NETWORK_DETAILS
		;;



	*)
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE
		vmware_esx_usage
		;;


esac

