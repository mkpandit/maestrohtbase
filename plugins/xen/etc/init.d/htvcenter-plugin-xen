#!/bin/bash
# init script for the htvcenter xen-plugin
#
# htvcenter Enterprise developed by htvcenter Enterprise GmbH.
#
# All source code and content (c) Copyright 2012, htvcenter Enterprise GmbH unless specifically noted otherwise.
#
# This source code is released under the htvcenter Enterprise Server and Client License, unless otherwise agreed with htvcenter Enterprise GmbH.
# The latest version of this license can be found here: http://htvcenter-enterprise.com/license
#
# By using this software, you acknowledge having read this license and agree to be bound thereby.
#
#           http://htvcenter-enterprise.com
#
# Copyright 2012, htvcenter Enterprise GmbH <info@htvcenter-enterprise.com>
#

htvcenter_SERVER_BASE_DIR=$(pushd $(dirname $0)/../../../../.. > /dev/null; echo $PWD; popd > /dev/null)
. $htvcenter_SERVER_BASE_DIR/htvcenter/etc/htvcenter-server.conf
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-server-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/xen/include/htvcenter-plugin-xen-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/xen/etc/htvcenter-plugin-xen.conf
htvcenter_server_get_config
htvcenter_SERVER_IP=$htvcenter_SERVER_IP_ADDRESS
# define wget to use with https
if [ "$htvcenter_WEB_PROTOCOL" == "https" ]; then
	WGET="wget -q --no-check-certificate"
else
	WGET="wget -q"
fi
# which screen binary to use
if [ -x /usr/bin/screen.real ]; then
	RUNSCREEN="/usr/bin/screen.real"
else
	RUNSCREEN=`which screen`
fi

htvcenter_VM_DIR="/var/lib/xen/htvcenter/"
export htvcenter_VM_DIR
export resource_id=0


LINE_IFS='
'

function htvcenter_plugin_xen_start() {
	htvcenter_plugin_xen_stop 1>/dev/null 2>&1
	echo "Starting the htvcenter xen-plugin"
	touch $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/base/plugins/xen/.running
	# start the vm status autostart
	if [ -d "$htvcenter_VM_DIR" ]; then
		for VM_CONFIG in `find $htvcenter_VM_DIR/* -name autostart.$resource_id 2>/dev/null`; do
			VM_NAME=`dirname $VM_CONFIG`
			VM_NAME=`basename $VM_NAME`
			XEN_VM_MAC=`cat $htvcenter_VM_DIR/$VM_NAME/mac1 2>/dev/null`
			if [ "$XEN_VM_MAC" == "" ]; then
				echo "- Could not find the MAC address of VM $VM_NAME, not autostarting..."
				continue
			fi
			# already running ?
			if ps ax | grep -i $XEN_VM_MAC | grep htvcenter-xen-monitord | grep -v grep 1>/dev/null; then
				echo "- VM $VM_NAME already running, not autostarting..."
				continue
			fi

			# ask htvcenter what to do
			if ! $WGET -O $htvcenter_VM_DIR/$VM_NAME/resource-parameter.conf "$htvcenter_WEB_PROTOCOL://$htvcenter_SERVER_IP/htvcenter/action/resource-monitor.php?resource_command=get_parameter&resource_mac=$XEN_VM_MAC"; then
				echo "- Could not get parameters for VM $VM_NAME, not auto-starting it ..."
				continue
			fi
			unset appliance_state
			unset image_rootdevice
			. $htvcenter_VM_DIR/$VM_NAME/resource-parameter.conf
			# is really active ?
			if [ "$appliance_state" == "active" ] && [ "$image_rootdevice" != "ram" ]; then
				echo "- Activating Rootdevice $image_rootdevice for VM $VM_NAME"
				lvchange -ay -y $image_rootdevice
				sleep 2
				# make sure the lvm device is active
				if [ -e "$image_rootdevice" ]; then
					echo "- auto-starting active VM $VM_NAME"
					# make sure the rigth device is in the VM config
					echo "phy:$image_rootdevice,hda,w" > $htvcenter_VM_DIR/$VM_NAME/disk1
					$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/xen/bin/htvcenter-xen-vm start -n $VM_NAME
					sleep $htvcenter_PLUGIN_VM_AUTOSTART_DELAY
				else
					echo "- Rootdevice $image_rootdevice for VM $VM_NAME not existing, not autostarting it ..."
					continue
				fi
			else
				# make sure the VM is not still attached to the disk
				> $htvcenter_VM_DIR/$VM_NAME/disk1
				# start only the xen monitor
				echo "- auto-starting idle VM $VM_NAME"
			fi
			kill `ps ax | grep htvcenter-xen-monitord | grep -v grep | grep -i $XEN_VM_MAC | awk {' print $1 '}` 2>/dev/null
			$RUNSCREEN -dmS $XEN_VM_MAC $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/xen/sbin/htvcenter-xen-monitord $XEN_VM_MAC
		done
	fi

}


function htvcenter_plugin_xen_stop() {
	echo "Stopping the htvcenter xen-plugin"
	rm -f $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/base/plugins/xen/.running
}

function htvcenter_plugin_xen_uninstall() {
	local USERNAME=$1
	local PASSWORD=$2
	if [ "$USERNAME" == "" ] && [ "$PASSWORD" == "" ]; then
		echo -n "xen: Please give a username to uninstall the plugin : "
		read USERNAME
		echo
		echo -n "xen: Please give the password for user $USERNAME : "
		read PASSWORD
		echo
	fi
	echo "Uninstalling the htvcenter xen-plugin"
	htvcenter_plugin_xen_stop
	htvcenter_server_remove_deployment_type $USERNAME $PASSWORD xen-lvm-deployment
	htvcenter_server_remove_deployment_type $USERNAME $PASSWORD xen-bf-deployment
	htvcenter_server_remove_virtualization_type $USERNAME $PASSWORD xen
	htvcenter_server_remove_virtualization_type $USERNAME $PASSWORD xen-vm-local
	htvcenter_server_remove_virtualization_type $USERNAME $PASSWORD xen-vm-net
	rm -f $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/base/plugins/xen
	rm -f $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/boot-service/boot-service-xen.tgz
	rm -f $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/boot-service/image.xen-lvm-deployment.php
	rm -f $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/boot-service/image.xen-bf-deployment.php

}

function htvcenter_plugin_xen_init() {
	local USERNAME=$1
	local PASSWORD=$2
	if [ "$USERNAME" == "" ] && [ "$PASSWORD" == "" ]; then
		echo -n "xen: Please give a username to init the plugin : "
		read USERNAME
		echo
		echo -n "xen: Please give the password for user $USERNAME : "
		read PASSWORD
		echo
	fi
	echo "Initializing the htvcenter xen-plugin"
	htvcenter_server_add_deployment_type $USERNAME $PASSWORD xen-lvm-deployment xen-lvm-deployment "LVM deployment for Xen" xen "Xen LVM Storage"
	htvcenter_server_add_deployment_type $USERNAME $PASSWORD xen-bf-deployment xen-bf-deployment "Blockfile deployment for Xen" xen "Xen Blockfile Storage"
	htvcenter_server_add_virtualization_type $USERNAME $PASSWORD xen "Xen Host"
	htvcenter_server_add_virtualization_type $USERNAME $PASSWORD xen-vm-local "Xen VM (localboot)"
	htvcenter_server_add_virtualization_type $USERNAME $PASSWORD xen-vm-net "Xen VM (networkboot)"

	# linking the web dir
	ln -sf $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/xen/web $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/base/plugins/xen
	# link the boot-service
	ln -sf $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/xen/web/boot-service-xen.tgz $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/boot-service/boot-service-xen.tgz
	# linking the image deployment parameters menu
	ln -sf $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/xen/web/image.xen-lvm-deployment.php $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/boot-service/image.xen-lvm-deployment.php
	ln -sf $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/xen/web/image.xen-bf-deployment.php $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/boot-service/image.xen-bf-deployment.php
	# create storage dir for stat files
	mkdir -p $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/xen/web/storage
	chmod 777 $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/xen/web/storage
	echo "Order deny,allow" > $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/xen/web/storage/.htaccess
	echo "Deny from all" >> $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/xen/web/storage/.htaccess

	chmod +x $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/xen/bin/*
	# create xen-stat dir
	mkdir -p $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/xen/web/xen-stat
	chmod -R 777 $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/xen/web/xen-stat
	echo "Order deny,allow" > $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/xen/web/xen-stat/.htaccess
	echo "Deny from all" >> $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/xen/web/xen-stat/.htaccess


}

USER=$2
PASS=$3

case "$1" in
	start)
		htvcenter_plugin_xen_start
		;;
	stop)
		htvcenter_plugin_xen_stop
		;;
	restart)
		htvcenter_plugin_xen_stop
		sleep 1
		htvcenter_plugin_xen_start
		;;
	init)
		htvcenter_plugin_xen_init $USER $PASS
		;;
	uninstall)
		htvcenter_plugin_xen_uninstall $USER $PASS
		;;
	*)
		echo "Usage: $0 {start|stop|restart|init|uninstall}"
		exit 1

esac
exit $?




