#!/bin/bash
# init script for the htvcenter sanboot-storage-plugin
#
# htvcenter Enterprise developed by htvcenter Enterprise GmbH.
#
# All source code and content (c) Copyright 2014, htvcenter Enterprise GmbH unless specifically noted otherwise.
#
# This source code is released under the htvcenter Enterprise Server and Client License, unless otherwise agreed with htvcenter Enterprise GmbH.
# The latest version of this license can be found here: http://htvcenter-enterprise.com/license
#
# By using this software, you acknowledge having read this license and agree to be bound thereby.
#
#           http://htvcenter-enterprise.com
#
# Copyright 2014, htvcenter Enterprise GmbH <info@htvcenter-enterprise.com>
#

htvcenter_SERVER_BASE_DIR=$(pushd $(dirname $0)/../../../../.. > /dev/null; echo $PWD; popd > /dev/null)
. $htvcenter_SERVER_BASE_DIR/htvcenter/etc/htvcenter-server.conf
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-server-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/sanboot-storage/include/htvcenter-plugin-sanboot-storage-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/sanboot-storage/etc/htvcenter-plugin-sanboot-storage.conf
htvcenter_SOURCE_VERSION="0.9.9"

LINE_IFS='
'

function htvcenter_plugin_sanboot-storage_start() {
	htvcenter_plugin_sanboot-storage_stop 1>/dev/null 2>&1
	echo "Starting the htvcenter sanboot-storage-plugin"
	touch $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/base/plugins/sanboot-storage/.running

	if [ "$SANBOOT_AOE_STORAGE_AUTO_START" == "yes" ]; then
		# aoe
		mkdir -p /var/run/vblade/
		if [ -x "/etc/init.d/vblade" ]; then
			if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
				invoke-rc.d vblade start
			else
				/etc/init.d/vblade start
			fi
		else
			if [ -f $VBLADECONF ]; then
				if which vbladed 1>/dev/null; then
					echo "Starting vblades ..."
					OLD_IFS=$IFS
					IFS=$LINE_IFS
					for VBLADE_L in `cat $VBLADECONF | grep -v '#' | sed '/^$/d'`; do
						V_INTERFACE=`echo $VBLADE_L | awk {' print $1 '}`
						V_SHELF=`echo $VBLADE_L | awk {' print $2 '}`
						V_SLOT=`echo $VBLADE_L | awk {' print $3 '}`
						V_IMAGE=`echo $VBLADE_L | awk {' print $4 '}`
						V_ALLOWED_MAC=`echo $VBLADE_L | awk {' print $5 '}`
						vbladed $V_SHELF $V_SLOT $V_INTERFACE $V_IMAGE
					done
					IFS=$OLD_IFS
				fi
			fi
		fi
	fi
	if [ "$SANBOOT_ISCSI_STORAGE_AUTO_START" == "yes" ]; then
		if [ -x "/etc/init.d/iscsi-target" ]; then
			if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
				invoke-rc.d iscsi-target start
			else
				/etc/init.d/iscsi-target start
			fi
		elif [ -x /etc/init.d/iscsitarget ]; then
			if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
				invoke-rc.d iscsitarget start
			else
				/etc/init.d/iscsitarget start
			fi
		fi
	fi


}


function htvcenter_plugin_sanboot-storage_stop() {
	echo "Stopping the htvcenter sanboot-storage-plugin"
	rm -f $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/base/plugins/sanboot-storage/.running
	if [ "$SANBOOT_AOE_STORAGE_AUTO_START" == "yes" ]; then
		# aoe
		if [ -x "/etc/init.d/vblade" ]; then
			if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
				invoke-rc.d vblade stop
			else
				/etc/init.d/vblade stop
				for VPID in `ps ax | grep vblade | grep -v grep | awk {' print $1 '}`; do
					kill $VPID
				done
			fi
		else
			if [ -f $VBLADECONF ]; then
				echo "Stopping vblades ..."
				OLD_IFS=$IFS
				IFS=$LINE_IFS
				for VBLADE_L in `cat $VBLADECONF | grep -v '#' | sed '/^$/d'`; do
					V_INTERFACE=`echo $VBLADE_L | awk {' print $1 '}`
					V_SHELF=`echo $VBLADE_L | awk {' print $2 '}`
					V_SLOT=`echo $VBLADE_L | awk {' print $3 '}`
					V_IMAGE=`echo $VBLADE_L | awk {' print $4 '}`
					V_ALLOWED_MAC=`echo $VBLADE_L | awk {' print $5 '}`
					for VBLADE_PID in `ps ax | grep vblade | grep -w $V_IMAGE | awk {' print $1 '}`; do
						kill $VBLADE_PID
					done
				done
				IFS=$OLD_IFS
			fi
			killall vblade 1>/dev/null 2>&1
		fi
	fi
	if [ "$SANBOOT_ISCSI_STORAGE_AUTO_START" == "yes" ]; then
		if [ -x "/etc/init.d/iscsi-target" ]; then
			if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
				invoke-rc.d iscsi-target stop
			else
				/etc/init.d/iscsi-target stop
			fi
		elif [ -x /etc/init.d/iscsitarget ]; then
			if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
				invoke-rc.d iscsitarget stop
			else
				/etc/init.d/iscsitarget stop
			fi
		fi
	fi

}

function htvcenter_plugin_sanboot-storage_uninstall() {
	local USERNAME=$1
	local PASSWORD=$2
	if [ "$USERNAME" == "" ] && [ "$PASSWORD" == "" ]; then
		echo -n "sanboot-storage: Please give a username to uninstall the plugin : "
		read USERNAME
		echo
		echo -n "sanboot-storage: Please give the password for user $USERNAME : "
		read PASSWORD
		echo
	fi
	echo "Uninstalling the htvcenter sanboot-storage-plugin"
	htvcenter_plugin_sanboot-storage_stop
	htvcenter_server_remove_deployment_type $USERNAME $PASSWORD aoe-san-deployment
	htvcenter_server_remove_deployment_type $USERNAME $PASSWORD iscsi-san-deployment
	rm -f $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/base/plugins/sanboot-storage
	rm -f $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/boot-service/boot-service-sanboot-storage.tgz
	rm -f $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/boot-service/image.aoe-san-deployment.php
	rm -f $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/boot-service/image.iscsi-san-deployment.php
	rm -f $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/boot-service/image.iscsi-san-deployment.php
	# remove gpxe
	rm -f $htvcenter_SERVER_BASE_DIR/htvcenter/tftpboot/undionly.kpxe
}

function htvcenter_plugin_sanboot-storage_init() {
	local USERNAME=$1
	local PASSWORD=$2
	if [ "$USERNAME" == "" ] && [ "$PASSWORD" == "" ]; then
		echo -n "sanboot-storage: Please give a username to init the plugin : "
		read USERNAME
		echo
		echo -n "sanboot-storage: Please give the password for user $USERNAME : "
		read PASSWORD
		echo
	fi
	echo "Initializing the htvcenter sanboot-storage-plugin"
	htvcenter_server_add_deployment_type $USERNAME $PASSWORD aoe-san-deployment aoe-san-deployment "Sanboot Aoe-root deployment" sanboot-storage "Sanboot Storage Server (Aoe)"
	htvcenter_server_add_deployment_type $USERNAME $PASSWORD iscsi-san-deployment iscsi-san-deployment "Sanboot Iscsi-root deployment" sanboot-storage "Sanboot Storage Server (Iscsi)"

	# linking the web dir
	ln -sf $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/sanboot-storage/web $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/base/plugins/sanboot-storage
	# link the boot-service
	ln -sf $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/sanboot-storage/web/boot-service-sanboot-storage.tgz $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/boot-service/boot-service-sanboot-storage.tgz
	# unpack gpxe bootloader
	tar -C $htvcenter_SERVER_BASE_DIR/htvcenter/tftpboot/ -xzf $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/sanboot-storage/bin/undionly.kpxe.$htvcenter_SOURCE_VERSION.tgz
	# linking the image deployment parameters menu
	ln -sf $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/sanboot-storage/web/image.aoe-san-deployment.php $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/boot-service/image.aoe-san-deployment.php
	ln -sf $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/sanboot-storage/web/image.iscsi-san-deployment.php $htvcenter_WEBSERVER_DOCUMENT_ROOT/htvcenter/boot-service/image.iscsi-san-deployment.php
	# create storage dir for stat files
	mkdir -p $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/sanboot-storage/web/storage
	chmod 777 $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/sanboot-storage/web/storage
	echo "Order deny,allow" > $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/sanboot-storage/web/storage/.htaccess
	echo "Deny from all" >> $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/sanboot-storage/web/storage/.htaccess

}

USER=$2
PASS=$3

case "$1" in
	start)
		htvcenter_plugin_sanboot-storage_start
		;;
	stop)
		htvcenter_plugin_sanboot-storage_stop
		;;
	restart)
		htvcenter_plugin_sanboot-storage_stop
		sleep 1
		htvcenter_plugin_sanboot-storage_start
		;;
	init)
		htvcenter_plugin_sanboot-storage_init $USER $PASS
		;;
	uninstall)
		htvcenter_plugin_sanboot-storage_uninstall $USER $PASS
		;;
	*)
		echo "Usage: $0 {start|stop|restart|init|uninstall}"
		exit 1

esac
exit $?




