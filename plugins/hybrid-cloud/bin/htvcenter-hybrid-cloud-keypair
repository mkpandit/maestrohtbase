#!/bin/bash
#
# htvcenter Enterprise developed by htvcenter Enterprise GmbH.
#
# All source code and content (c) Copyright 2014, htvcenter Enterprise GmbH unless specifically noted otherwise.
#
# This source code is released under the htvcenter Enterprise Server and Client License, unless otherwise agreed with htvcenter Enterprise GmbH.
# The latest version of this license can be found here: http://htvcenter-enterprise.com/license
#
# By using this software, you acknowledge having read this license and agree to be bound thereby.
#
#           http://htvcenter-enterprise.com
#
# Copyright 2014, htvcenter Enterprise GmbH <info@htvcenter-enterprise.com>
#

# this script automatically manages hybrid-cloud keypairs
htvcenter_SERVER_BASE_DIR=$(dirname $0)/../../../..
htvcenter_SERVER_BASE_DIR=$(pushd $htvcenter_SERVER_BASE_DIR > /dev/null && echo $PWD && popd > /dev/null)
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-functions
# unblock starting command queue early for non-blocking + ui commands
# only blocking commands
export htvcenter_SOURCE_DIR="$htvcenter_SERVER_BASE_DIR/htvcenter/"
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-package-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hybrid-cloud/include/htvcenter-plugin-hybrid-cloud-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hybrid-cloud/etc/htvcenter-plugin-hybrid-cloud.conf
# get the ip config
. $htvcenter_SERVER_BASE_DIR/htvcenter/etc/htvcenter-server.conf
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-server-functions
htvcenter_server_get_config
export LANG=C
export resource_htvcenterserver=$htvcenter_SERVER_IP_ADDRESS
# stat dir
HYBRID_CLOUD_STAT_DIR="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hybrid-cloud/web/hybrid-cloud-stat/"

if [ "$htvcenter_CUSTOM_JAVA_HOME" != "" ]; then
	export JAVA_HOME=$htvcenter_CUSTOM_JAVA_HOME
	export PATH=$JAVA_HOME/bin:$PATH
fi
if [ "$htvcenter_CUSTOM_EC2_API_HOME" != "" ]; then
	export EC2_HOME=$htvcenter_CUSTOM_EC2_API_HOME
	export PATH=$htvcenter_CUSTOM_EC2_API_HOME/bin:$PATH
fi
if [ "$htvcenter_CUSTOM_EC2_AMI_HOME" != "" ]; then
	export EC2_AMITOOL_HOME=$htvcenter_CUSTOM_EC2_AMI_HOME
	export EC2_AMI_HOME=$htvcenter_CUSTOM_EC2_AMI_HOME
	export PATH=$htvcenter_CUSTOM_EC2_AMI_HOME/bin:$PATH
fi

# define wget to use with https
if [ "$htvcenter_WEB_PROTOCOL" == "https" ]; then
	WGET="wget -q --no-check-certificate"
else
	WGET="wget -q"
fi

# let only root run this script
WHOAMI=`whoami`
if [ "$WHOAMI" != "root" ]; then
	echo "ERROR: Please run this script as root!"
	exit 6
fi

# check deps
if ! check_hybrid_cloud_deps; then
	if [ "$NON_BLOCKING" != "true" ]; then
		htvcenter_unblock_starting_queue $@
	fi
	exit 1
fi

# create stat + conf dir
if [ ! -d "$HYBRID_CLOUD_STAT_DIR" ]; then
	mkdir -p $HYBRID_CLOUD_STAT_DIR
	chmod -R 777 $HYBRID_CLOUD_STAT_DIR
fi




function hybrid_cloud_usage() {
	echo "Usage : $0 describe <-n account-name> <-i account-id> <-O access_key> <-W secret_key> <-t aws/euca>"
	echo "        $0 create/remove <-n account-name> <-i account-id> <-O access_key> <-W secret_key> <-t aws/euca> <-k keypair-name>"
	echo ""
	echo "        $0 describe <-n account-name> <-i account-id> <-u username> <-p passsword> <-q host-ip> <-x portnumber> <-e endpoint> <-g tenant-name> <-t lc-openstack>"
	echo "        $0 create <-n account-name> <-i account-id> <-u username> <-p passsword> <-q host-ip> <-x portnumber> <-e endpoint> <-g tenant-name> <-t lc-openstack> <-k keypair-name> <-c keypair-content>"
	echo "        $0 remove <-n account-name> <-i account-id> <-u username> <-p passsword> <-q host-ip> <-x portnumber> <-e endpoint> <-g tenant-name> <-t lc-openstack> <-k keypair-name>"
	echo ""
	echo "Optional parameters:"
	echo "             [--htvcenter-ui-user <username>]"
	echo "             [--htvcenter-internal-cmd <true/false>]"
	echo "             [--htvcenter-cmd-mode <regular/background/fork>]"
	exit 1
}

# debugging
# exec 2>> /var/log/ec2-commands.log
# set -x


FULL_COMMANDLINE="$0 $@"
HYBRID_CLOUD_COMMAND=$1
shift

while [ $# -ne 0 ]; do
	case "$1" in
		-i)
			PARAM_HYBRID_CLOUD_ACCOUNT_ID=$2
			shift
			;;
		-n)
			PARAM_HYBRID_CLOUD_ACCOUNT_NAME=$2
			shift
			;;
		-t)
			PARAM_HYBRID_CLOUD_ACCOUNT_TYPE=$2
			shift
			;;
		-O)
			PARAM_HYBRID_CLOUD_ACCESS_KEY=$2
			shift
			;;
		-W)
			PARAM_HYBRID_CLOUD_SECRET_KEY=$2
			shift
			;;
		-u)
			PARAM_HYBRID_CLOUD_USERNAME=$2
			shift
			;;
		-p)
			PARAM_HYBRID_CLOUD_PASSWORD=$2
			shift
			;;
		-q)
			PARAM_HYBRID_CLOUD_HOST=$2
			shift
			;;
		-x)
			PARAM_HYBRID_CLOUD_PORT=$2
			shift
			;;
		-e)
			PARAM_HYBRID_CLOUD_ENDPOINT=$2
			shift
			;;
		-g)
			PARAM_HYBRID_CLOUD_TENANT=$2
			shift
			;;
		-k)
			PARAM_KEYPAIR_NAME=$2
			shift
			;;
		-c)
			PARAM_KEYPAIR_CONTENT=$2
			shift
			;;
		-ir)
			PARAM_INSTANCE_REGION=$2
			shift
			;;
		--htvcenter-ui-user)
			htvcenter_UI_USER=$2
			shift
			;;
		--htvcenter-internal-cmd)
			htvcenter_INTERNAL_CMD=$2
			shift
			;;
		--htvcenter-cmd-mode)
			htvcenter_CMD_MODE=$2
			shift
			;;

		*)
			if [ "$NON_BLOCKING" != "true" ]; then
				htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			fi
			echo "ERROR: Free commandline arguments are not allowed"
			hybrid_cloud_usage
			exit 6
			;;
	esac
	shift
done

# checks
if [ "$HYBRID_CLOUD_COMMAND" == "" ]; then
	htvcenter_unblock_starting_queue $FULL_COMMANDLINE
	hybrid_cloud_usage
fi
if [ "$PARAM_HYBRID_CLOUD_ACCOUNT_ID" == "" ] && [ "$PARAM_HYBRID_CLOUD_ACCOUNT_TYPE" == "" ] || [ "$PARAM_HYBRID_CLOUD_ACCOUNT_NAME" == "" ]; then
	if [ "$NON_BLOCKING" != "true" ]; then
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE
	fi
	hybrid_cloud_usage
fi

# map the cloud types to the utils names
case "$PARAM_HYBRID_CLOUD_ACCOUNT_TYPE" in
	aws)
		. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hybrid-cloud/etc/commands/aws.conf
		check_hybrid_cloud_deps_ec2
		if  [ "$PARAM_HYBRID_CLOUD_ACCESS_KEY" == "" ] || [ "$PARAM_HYBRID_CLOUD_SECRET_KEY" == "" ]; then
			if [ "$NON_BLOCKING" != "true" ]; then
				htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			fi
			hybrid_cloud_usage
		fi
		# set region
		if [ "$PARAM_INSTANCE_REGION" != "" ]; then
			PARAM_INSTANCE_REGION_PARAMETER=" --region $PARAM_INSTANCE_REGION"
		fi
		HYBRID_CLOUD_ACCOUNT="-O $PARAM_HYBRID_CLOUD_ACCESS_KEY -W $PARAM_HYBRID_CLOUD_SECRET_KEY"
		;;
	euca)
		. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hybrid-cloud/etc/commands/euca.conf
		check_hybrid_cloud_deps_euca
		if  [ "$PARAM_HYBRID_CLOUD_ACCESS_KEY" == "" ] || [ "$PARAM_HYBRID_CLOUD_SECRET_KEY" == "" ]; then
			if [ "$NON_BLOCKING" != "true" ]; then
				htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			fi
			hybrid_cloud_usage
		fi
		# set region
		if [ "$PARAM_INSTANCE_REGION" != "" ]; then
			PARAM_INSTANCE_REGION_PARAMETER=" --region $PARAM_INSTANCE_REGION"
		fi
		HYBRID_CLOUD_ACCOUNT="-O $PARAM_HYBRID_CLOUD_ACCESS_KEY -W $PARAM_HYBRID_CLOUD_SECRET_KEY"
		;;
	lc-openstack)
		. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hybrid-cloud/etc/commands/lc-openstack.conf
		if [ "$PARAM_HYBRID_CLOUD_ACCOUNT_NAME" == "" ] || [ "$PARAM_HYBRID_CLOUD_USERNAME" == "" ] || [ "$PARAM_HYBRID_CLOUD_PASSWORD" == "" ] || [ "$PARAM_HYBRID_CLOUD_HOST" == "" ] || [ "$PARAM_HYBRID_CLOUD_PORT" == "" ] || [ "$PARAM_HYBRID_CLOUD_ENDPOINT" == "" ] || [ "$PARAM_HYBRID_CLOUD_TENANT" == "" ]; then
			if [ "$NON_BLOCKING" != "true" ]; then
				htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			fi
			hybrid_cloud_usage
		fi
		HYBRID_CLOUD_ACCOUNT="--provider OPENSTACK --username $PARAM_HYBRID_CLOUD_USERNAME --password $PARAM_HYBRID_CLOUD_PASSWORD --host $PARAM_HYBRID_CLOUD_HOST --port $PARAM_HYBRID_CLOUD_PORT --endpoint $PARAM_HYBRID_CLOUD_ENDPOINT --tenant $PARAM_HYBRID_CLOUD_TENANT"
		;;
esac

if [ "$htvcenter_UI_USER" != "" ]; then
	htvcenter_UI_USER_PARAMETER=" --htvcenter-ui-user $htvcenter_UI_USER"
fi


# main
case "$HYBRID_CLOUD_COMMAND" in
	describe)
		HC_TMP_FILE="$HYBRID_CLOUD_STAT_DIR/$PARAM_HYBRID_CLOUD_ACCOUNT_ID.describe_keypair.tmp"
		HC_CONF_FILE="$HYBRID_CLOUD_STAT_DIR/$PARAM_HYBRID_CLOUD_ACCOUNT_ID.describe_keypair.log"

		LOCK_TIME=`htvcenter_lock_queue aquire hybrid-cloud`
		trap "htvcenter_lock_queue release hybrid-cloud $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		$DESCRIBE_KEYPAIRS $HYBRID_CLOUD_ACCOUNT $PARAM_INSTANCE_REGION_PARAMETER > $HC_TMP_FILE &
		hybrid_cloud_wait_for_timeout $! $htvcenter_PLUGIN_HYBRID_CLOUD_REQUEST_TIMEOUT
		HYBRID_CLOUD_RET=$?
		if [ "$HYBRID_CLOUD_RET" != 0 ]; then
			htvcenter_post_event 0 "describe" 3 "htvcenter-hybrid-cloud" "Could not list Cloud Keypairs for account $PARAM_HYBRID_CLOUD_ACCOUNT_NAME!"
		else
			> $HC_CONF_FILE.tmp
			for KEYPAIR_NAME in `grep ^KEYPAIR $HC_TMP_FILE | awk '{ print $2 }'`; do
				KEYPAIR_PUBLIC_KEY=`grep ^KEYPAIR $HC_TMP_FILE | grep -w $KEYPAIR_NAME | awk '{ print $3 }'`
				if [ "$KEYPAIR_NAME" == "$KEYPAIR_PUBLIC_KEY" ]; then
					KEYPAIR_PUBLIC_KEY=`grep ^KEYPAIR $HC_TMP_FILE | grep -w $KEYPAIR_NAME | awk '{ print $4 }'`
				fi
				echo "KEYPAIR""@""$KEYPAIR_NAME""@""$KEYPAIR_PUBLIC_KEY" >> $HC_CONF_FILE.tmp
			done
			chmod -R 777 $HC_CONF_FILE.tmp
			mv -f $HC_CONF_FILE.tmp $HC_CONF_FILE
		fi
		rm -f $HC_TMP_FILE

		htvcenter_lock_queue release hybrid-cloud $LOCK_TIME
		trap '' EXIT
		;;


	create)
		if [ "$PARAM_KEYPAIR_NAME" == "" ]; then
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			hybrid_cloud_usage
		fi

		LOCK_TIME=`htvcenter_lock_queue aquire hybrid-cloud`
		trap "htvcenter_lock_queue release hybrid-cloud $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		if [ "$PARAM_HYBRID_CLOUD_ACCOUNT_TYPE" == "aws" ] || [ "$PARAM_HYBRID_CLOUD_ACCOUNT_TYPE" == "euca" ]; then
			mkdir -p $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hybrid-cloud/etc/keypairs
			$CREATE_KEYPAIR $HYBRID_CLOUD_ACCOUNT $PARAM_INSTANCE_REGION_PARAMETER $PARAM_KEYPAIR_NAME > $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hybrid-cloud/etc/keypairs/$PARAM_KEYPAIR_NAME.pem &
			hybrid_cloud_wait_for_timeout $! $htvcenter_PLUGIN_HYBRID_CLOUD_REQUEST_TIMEOUT
			HYBRID_CLOUD_RET=$?
			if [ "$HYBRID_CLOUD_RET" != 0 ]; then
				htvcenter_post_event 0 "describe" 3 "htvcenter-hybrid-cloud" "Could not create Cloud Keypair $PARAM_KEYPAIR_NAME for account $PARAM_HYBRID_CLOUD_ACCOUNT_NAME!"
			fi
		fi
		if [ "$PARAM_HYBRID_CLOUD_ACCOUNT_TYPE" == "lc-openstack" ]; then
			if [ "$PARAM_KEYPAIR_CONTENT" == "" ]; then
				htvcenter_unblock_starting_queue $FULL_COMMANDLINE
				hybrid_cloud_usage
			fi
			PARAM_KEYPAIR_CONTENT=`echo $PARAM_KEYPAIR_CONTENT | sed -e "s#%# #g"`
			$CREATE_KEYPAIR $HYBRID_CLOUD_ACCOUNT --identifier $PARAM_KEYPAIR_NAME --keypair "$PARAM_KEYPAIR_CONTENT" &
			hybrid_cloud_wait_for_timeout $! $htvcenter_PLUGIN_HYBRID_CLOUD_REQUEST_TIMEOUT
			HYBRID_CLOUD_RET=$?
			if [ "$HYBRID_CLOUD_RET" != 0 ]; then
				htvcenter_post_event 0 "describe" 3 "htvcenter-hybrid-cloud" "Could not create Cloud Keypair $PARAM_KEYPAIR_NAME for account $PARAM_HYBRID_CLOUD_ACCOUNT_NAME!"
			fi

		fi
		htvcenter_lock_queue release hybrid-cloud $LOCK_TIME
		trap '' EXIT
		;;

	remove)
		if [ "$PARAM_KEYPAIR_NAME" == "" ]; then
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			hybrid_cloud_usage
		fi
		LOCK_TIME=`htvcenter_lock_queue aquire hybrid-cloud`
		trap "htvcenter_lock_queue release hybrid-cloud $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		if [ "$PARAM_HYBRID_CLOUD_ACCOUNT_TYPE" == "aws" ] || [ "$PARAM_HYBRID_CLOUD_ACCOUNT_TYPE" == "euca" ]; then
			$REMOVE_KEYPAIR $HYBRID_CLOUD_ACCOUNT $PARAM_INSTANCE_REGION_PARAMETER $PARAM_KEYPAIR_NAME &
			hybrid_cloud_wait_for_timeout $! $htvcenter_PLUGIN_HYBRID_CLOUD_REQUEST_TIMEOUT
			HYBRID_CLOUD_RET=$?
			if [ "$HYBRID_CLOUD_RET" != 0 ]; then
				htvcenter_post_event 0 "describe" 3 "htvcenter-hybrid-cloud" "Could not remove Cloud Keypair $PARAM_KEYPAIR_NAME for account $PARAM_HYBRID_CLOUD_ACCOUNT_NAME!"
			else
				rm -f $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hybrid-cloud/etc/keypairs/$PARAM_KEYPAIR_NAME.pem
			fi
		fi
		if [ "$PARAM_HYBRID_CLOUD_ACCOUNT_TYPE" == "lc-openstack" ]; then
			$REMOVE_KEYPAIR $HYBRID_CLOUD_ACCOUNT $PARAM_INSTANCE_REGION_PARAMETER --identifier $PARAM_KEYPAIR_NAME &
			hybrid_cloud_wait_for_timeout $! $htvcenter_PLUGIN_HYBRID_CLOUD_REQUEST_TIMEOUT
			HYBRID_CLOUD_RET=$?
			if [ "$HYBRID_CLOUD_RET" != 0 ]; then
				htvcenter_post_event 0 "describe" 3 "htvcenter-hybrid-cloud" "Could not remove Cloud Keypair $PARAM_KEYPAIR_NAME for account $PARAM_HYBRID_CLOUD_ACCOUNT_NAME!"
			fi
		fi

		htvcenter_lock_queue release hybrid-cloud $LOCK_TIME
		trap '' EXIT
		;;

	*)
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE
		hybrid_cloud_usage
		;;


esac

