#!/bin/bash
# this script automatically manages vmware-vsphere networks (vswitch + porgroups)
#
# HyperTask Enterprise developed by HyperTask Enterprise GmbH.
#
# All source code and content (c) Copyright 2014, HyperTask Enterprise GmbH unless specifically noted otherwise.
#
# This source code is released under the HyperTask Enterprise Server and Client License, unless otherwise agreed with HyperTask Enterprise GmbH.
# The latest version of this license can be found here: http://htvcenter-enterprise.com/license
#
# By using this software, you acknowledge having read this license and agree to be bound thereby.
#
#           http://htvcenter-enterprise.com
#
# Copyright 2014, HyperTask Enterprise GmbH <info@htvcenter-enterprise.com>
#
htvcenter_SERVER_BASE_DIR=$(dirname $0)/../../../..
htvcenter_SERVER_BASE_DIR=$(pushd $htvcenter_SERVER_BASE_DIR > /dev/null && echo $PWD && popd > /dev/null)
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-functions
# unblock starting command queue early for non-blocking + ui commands
VMWARE_VSPHERE_COMMAND=$1
if [ "$VMWARE_VSPHERE_COMMAND" == "post_net_config" ] || [ "$VMWARE_VSPHERE_COMMAND" == "list" ]; then
	htvcenter_unblock_starting_queue $@
	NON_BLOCKING=true
fi

export htvcenter_SOURCE_DIR="$htvcenter_SERVER_BASE_DIR/htvcenter/"
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-package-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/include/htvcenter-plugin-vmware-vsphere-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/etc/htvcenter-plugin-vmware-vsphere.conf
. $htvcenter_SERVER_BASE_DIR/htvcenter/etc/htvcenter-server.conf
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-server-functions
htvcenter_server_get_config
export resource_htvcenterserver=$htvcenter_SERVER_IP_ADDRESS
htvcenter_VMWARE_VSPHERE_HOST_CONF_DIR="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/conf/host"
htvcenter_VMWARE_VSPHERE_STAT_DIR="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/web/vmware-vsphere-stat/"
export LANG=C
ORG_IFS="$IFS"

# let only root run this script
WHOAMI=`whoami`
if [ "$WHOAMI" != "root" ]; then
	echo "ERROR: Please run this script as root!"
	exit 6
fi
# make sure required deps are installed
if ! check_vmware_vsphere_deps; then
	if [ "$NON_BLOCKING" != "true" ]; then
		htvcenter_unblock_starting_queue $@
	fi
	exit 1
fi

if [ ! -d "$htvcenter_VMWARE_VSPHERE_HOST_CONF_DIR" ]; then
	mkdir -p $htvcenter_VMWARE_VSPHERE_HOST_CONF_DIR
fi
if [ ! -d "$htvcenter_VMWARE_VSPHERE_STAT_DIR" ]; then
	mkdir -p $htvcenter_VMWARE_VSPHERE_STAT_DIR
	chmod 777 $htvcenter_VMWARE_VSPHERE_STAT_DIR
fi


function vmware_vsphere_usage() {
	echo "Usage : $0 add_vs <-i vsphere-server-ip> <-n vs-name> [-p ports]"
	echo "        $0 remove_vs <-i vsphere-server-ip> <-n vs-name>"
	echo "        $0 add_vs_up <-i vsphere-server-ip> <-n vs-name> <-u uplink>"
	echo "        $0 remove_vs_up <-i vsphere-server-ip> <-n vs-name> <-u uplink>"
	echo "        $0 add_pg <-i vsphere-server-ip> <-n vs-name> <-g portgroup> [-v vlan-id]"
	echo "        $0 remove_pg <-i vsphere-server-ip> <-n vs-name> <-g portgroup>"
	echo "        $0 add_pg_up <-i vsphere-server-ip> <-n vs-name> <-g portgroup> <-u uplink>"
	echo "        $0 remove_pg_up <-i vsphere-server-ip> <-n vs-name> <-g portgroup> <-u uplink>"
	echo "        $0 list <-i vsphere-server-ip>"
	echo "        $0 post_net_config <-i vsphere-server-ip>"
	echo ""
	echo "Optional parameters:"
	echo "             [--htvcenter-ui-user <username>]"
	echo "             [--htvcenter-internal-cmd <true/false>]"
	exit 1
}



FULL_COMMANDLINE="$0 $@"
VMWARE_VSPHERE_COMMAND=$1
shift
while [ $# -ne 0 ]; do
	case "$1" in
		-i)
			VMWARE_VSPHERE_HOST_IP=$2
			shift
			;;
		-e)
			VMWARE_VSPHERE_ESX_HOST_NAME=$2
			shift
			;;
		-n)
			VMWARE_VSPHERE_VSWITCH_NAME=$2
			shift
			;;
		-p)
			VMWARE_VSPHERE_VSWITCH_PORTS=$2
			shift
			;;
		-g)
			VMWARE_VSPHERE_PORTGROUP_NAME=$2
			VMWARE_VSPHERE_PORTGROUP_NAME=`echo $VMWARE_VSPHERE_PORTGROUP_NAME | sed -e "s/@/ /g"`
			shift
			;;
		-l)
			VMWARE_VSPHERE_UPLINK=$2
			shift
			;;
		-v)
			VMWARE_VSPHERE_PORTGROUP_VLAN_ID=$2
			shift
			;;
		--htvcenter-ui-user)
			htvcenter_UI_USER=$2
			shift
			;;
		--htvcenter-internal-cmd)
			htvcenter_INTERNAL_CMD=$2
			shift
			;;
		--htvcenter-cmd-mode)
			htvcenter_CMD_MODE=$2
			shift
			;;

		*)
			if [ "$NON_BLOCKING" != "true" ]; then
				htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			fi
			echo "ERROR: Free commandline arguments are not allowed"
			vmware_vsphere_usage
			exit 6
			;;
	esac
	shift
done


# command set ?
if [ "$VMWARE_VSPHERE_COMMAND" == "" ]; then
	htvcenter_post_event 0 "parameter_check" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, no command given!"
	htvcenter_unblock_starting_queue $FULL_COMMANDLINE
	vmware_vsphere_usage
fi
# vSphere ip set ?
if [ "$VMWARE_VSPHERE_HOST_IP" == "" ]; then
	htvcenter_post_event 0 "parameter_check" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, no VMware vSphere ip-adress given!"
	if [ "$NON_BLOCKING" != "true" ]; then
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE
	fi
	vmware_vsphere_usage
fi
# host configured ?
if [ ! -f "$htvcenter_VMWARE_VSPHERE_HOST_CONF_DIR/$VMWARE_VSPHERE_HOST_IP.conf" ]; then
	htvcenter_post_event 0 "parameter_check" 3 "htvcenter-vmware-vsphere-network" "VMware vSphere Host configuration missing! Please create the configuration first."
	if [ "$NON_BLOCKING" != "true" ]; then
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE
	fi
	vmware_vsphere_usage
else
	# source the host configuration
	. $htvcenter_VMWARE_VSPHERE_HOST_CONF_DIR/$VMWARE_VSPHERE_HOST_IP.conf
fi
if [ "$htvcenter_UI_USER" != "" ]; then
	htvcenter_UI_USER_PARAMETER=" --htvcenter-ui-user $htvcenter_UI_USER"
fi

# main
case "$VMWARE_VSPHERE_COMMAND" in


	add_vs)
		# check requirements
		if [ "$VMWARE_VSPHERE_VSWITCH_NAME" == "" ]; then
			htvcenter_post_event 0 "add_vs" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, VSwitch Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_vsphere_usage
		fi
		if [ "$VMWARE_VSPHERE_VSWITCH_PORTS" == "" ]; then
			VS_PORTS="128"
		else
			VS_PORTS=$VMWARE_VSPHERE_VSWITCH_PORTS
		fi
		VMNICPARAM=""
		if [ "$VMWARE_VSPHERE_UPLINK" != "" ] && [ "$VMWARE_VSPHERE_UPLINK" != "None" ]; then
			VMNICPARAM="-e $VMWARE_VSPHERE_UPLINK"
		fi

		LOCK_TIME=`htvcenter_lock_queue aquire vmware-vsphere`
		trap "htvcenter_lock_queue release vmware-vsphere $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		# use API to create the vswitch
		if ! $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/bin/python/vscreate.py -s "$VMWARE_VSPHERE_HOST_IP" -o 443 -u "$VI_USERNAME" -p "$VI_PASSWORD" -n "$VMWARE_VSPHERE_ESX_HOST_NAME" -v "$VMWARE_VSPHERE_VSWITCH_NAME" -x "$VS_PORTS" $VMNICPARAM; then
			htvcenter_post_event 0 "add_vs" 3 "htvcenter-vmware-vsphere-network" "Failed to create VSwitch $VMWARE_VSPHERE_VSWITCH_NAME on vSphere Host $VMWARE_VSPHERE_HOST_IP!"

			htvcenter_lock_queue release vmware-vsphere $LOCK_TIME
			trap '' EXIT

			exit 1
		fi

		htvcenter_lock_queue release vmware-vsphere $LOCK_TIME
		trap '' EXIT

		$0 post_net_config -i $VMWARE_VSPHERE_HOST_IP --htvcenter-internal-cmd true
		;;

	remove_vs)
		# check requirements
		if [ "$VMWARE_VSPHERE_VSWITCH_NAME" == "" ]; then
			htvcenter_post_event 0 "remove_vs" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, VSwitch Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_vsphere_usage
		fi

		LOCK_TIME=`htvcenter_lock_queue aquire vmware-vsphere`
		trap "htvcenter_lock_queue release vmware-vsphere $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		# use API to remove the vswitch
		if ! $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/bin/python/vsdestroy.py -s "$VMWARE_VSPHERE_HOST_IP" -o 443 -u "$VI_USERNAME" -p "$VI_PASSWORD" -n "$VMWARE_VSPHERE_ESX_HOST_NAME" -v "$VMWARE_VSPHERE_VSWITCH_NAME"; then
			htvcenter_post_event 0 "remove_vs" 3 "htvcenter-vmware-vsphere-network" "Failed to remove VSwitch $VMWARE_VSPHERE_VSWITCH_NAME on vSphere Host $VMWARE_VSPHERE_HOST_IP!"

			htvcenter_lock_queue release vmware-vsphere $LOCK_TIME
			trap '' EXIT

			exit 1
		fi

		htvcenter_lock_queue release vmware-vsphere $LOCK_TIME
		trap '' EXIT

		$0 post_net_config -i $VMWARE_VSPHERE_HOST_IP --htvcenter-internal-cmd true
		;;

	add_vs_up)
		# check requirements
		if [ "$VMWARE_VSPHERE_VSWITCH_NAME" == "" ]; then
			htvcenter_post_event 0 "add_vs_up" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, VSwitch Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_vsphere_usage
		fi
		if [ "$VMWARE_VSPHERE_UPLINK" == "" ]; then
			htvcenter_post_event 0 "add_vs_up" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, Uplink Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_vsphere_usage
		fi

		LOCK_TIME=`htvcenter_lock_queue aquire vmware-vsphere`
		trap "htvcenter_lock_queue release vmware-vsphere $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		# use API to add the uplink to the vswitch
		if ! $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/bin/python/vsaddnic.py -s "$VMWARE_VSPHERE_HOST_IP" -o 443 -u "$VI_USERNAME" -p "$VI_PASSWORD" -n "$VMWARE_VSPHERE_ESX_HOST_NAME" -v "$VMWARE_VSPHERE_VSWITCH_NAME" -e "$VMWARE_VSPHERE_UPLINK"; then
			htvcenter_post_event 0 "add_vs_up" 3 "htvcenter-vmware-vsphere-network" "Failed to add uplink $VMWARE_VSPHERE_UPLINK to VSwitch $VMWARE_VSPHERE_VSWITCH_NAME on vSphere Host $VMWARE_VSPHERE_HOST_IP!"

			htvcenter_lock_queue release vmware-vsphere $LOCK_TIME
			trap '' EXIT

			exit 1
		fi

		htvcenter_lock_queue release vmware-vsphere $LOCK_TIME
		trap '' EXIT

		$0 post_net_config -i $VMWARE_VSPHERE_HOST_IP --htvcenter-internal-cmd true
		;;

	remove_vs_up)
		# check requirements
		if [ "$VMWARE_VSPHERE_VSWITCH_NAME" == "" ]; then
			htvcenter_post_event 0 "remove_vs_up" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, VSwitch Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_vsphere_usage
		fi
		if [ "$VMWARE_VSPHERE_UPLINK" == "" ]; then
			htvcenter_post_event 0 "remove_vs_up" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, Uplink Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_vsphere_usage
		fi

		LOCK_TIME=`htvcenter_lock_queue aquire vmware-vsphere`
		trap "htvcenter_lock_queue release vmware-vsphere $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		if ! $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/bin/python/vsremovenic.py -s "$VMWARE_VSPHERE_HOST_IP" -o 443 -u "$VI_USERNAME" -p "$VI_PASSWORD" -n "$VMWARE_VSPHERE_ESX_HOST_NAME" -v "$VMWARE_VSPHERE_VSWITCH_NAME" -e "$VMWARE_VSPHERE_UPLINK"; then
			htvcenter_post_event 0 "remove_vs_up" 3 "htvcenter-vmware-vsphere-network" "Failed to remove uplink $VMWARE_VSPHERE_UPLINK to VSwitch $VMWARE_VSPHERE_VSWITCH_NAME on vSphere Host $VMWARE_VSPHERE_HOST_IP!"

			htvcenter_lock_queue release vmware-vsphere $LOCK_TIME
			trap '' EXIT

			exit 1
		fi

		htvcenter_lock_queue release vmware-vsphere $LOCK_TIME
		trap '' EXIT

		$0 post_net_config -i $VMWARE_VSPHERE_HOST_IP --htvcenter-internal-cmd true
		;;


	add_pg)
		# check requirements
		if [ "$VMWARE_VSPHERE_VSWITCH_NAME" == "" ]; then
			htvcenter_post_event 0 "add_pg" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, VSwitch Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_vsphere_usage
		fi
		if [ "$VMWARE_VSPHERE_PORTGROUP_NAME" == "" ]; then
			htvcenter_post_event 0 "add_pg" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, Portgroup Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_vsphere_usage
		fi
		if [ "$VMWARE_VSPHERE_PORTGROUP_VLAN_ID" == "" ]; then
			VMWARE_VSPHERE_PORTGROUP_VLAN_ID=0
		fi
		if [ "$VMWARE_VSPHERE_PORTGROUP_VLAN_ID" == "" ]; then
			VMWARE_VSPHERE_PORTGROUP_VLAN_ID=0
		fi
	
		LOCK_TIME=`htvcenter_lock_queue aquire vmware-vsphere`
		trap "htvcenter_lock_queue release vmware-vsphere $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		if ! $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/bin/python/pgcreate.py -s "$VMWARE_VSPHERE_HOST_IP" -o 443 -u "$VI_USERNAME" -p "$VI_PASSWORD" -n "$VMWARE_VSPHERE_ESX_HOST_NAME" -v "$VMWARE_VSPHERE_VSWITCH_NAME" -g "$VMWARE_VSPHERE_PORTGROUP_NAME" -l "$VMWARE_VSPHERE_PORTGROUP_VLAN_ID"; then
			htvcenter_post_event 0 "add_pg" 3 "htvcenter-vmware-vsphere-network" "Failed to add portgroup $VMWARE_VSPHERE_PORTGROUP_NAME VLAN $VMWARE_VSPHERE_PORTGROUP_VLAN_ID to VSwitch $VMWARE_VSPHERE_VSWITCH_NAME on vSphere Host $VMWARE_VSPHERE_HOST_IP!"

			htvcenter_lock_queue release vmware-vsphere $LOCK_TIME
			trap '' EXIT

			exit 1
		fi

		htvcenter_lock_queue release vmware-vsphere $LOCK_TIME
		trap '' EXIT

		$0 post_net_config -i $VMWARE_VSPHERE_HOST_IP --htvcenter-internal-cmd true
		;;

	remove_pg)
		# check requirements
		if [ "$VMWARE_VSPHERE_VSWITCH_NAME" == "" ]; then
			htvcenter_post_event 0 "remove_pg" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, VSwitch Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_vsphere_usage
		fi
		if [ "$VMWARE_VSPHERE_PORTGROUP_NAME" == "" ]; then
			htvcenter_post_event 0 "remove_pg" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, Portgroup Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_vsphere_usage
		fi

		LOCK_TIME=`htvcenter_lock_queue aquire vmware-vsphere`
		trap "htvcenter_lock_queue release vmware-vsphere $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		if ! $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/bin/python/pgdestroy.py -s "$VMWARE_VSPHERE_HOST_IP" -o 443 -u "$VI_USERNAME" -p "$VI_PASSWORD" -n "$VMWARE_VSPHERE_ESX_HOST_NAME" -v "$VMWARE_VSPHERE_VSWITCH_NAME" -g "$VMWARE_VSPHERE_PORTGROUP_NAME"; then
			htvcenter_post_event 0 "remove_pg" 3 "htvcenter-vmware-vsphere-network" "Failed to remove portgroup $VMWARE_VSPHERE_PORTGROUP_NAME to VSwitch $VMWARE_VSPHERE_VSWITCH_NAME on vSphere Host $VMWARE_VSPHERE_HOST_IP!"

			htvcenter_lock_queue release vmware-vsphere $LOCK_TIME
			trap '' EXIT

			exit 1
		fi

		htvcenter_lock_queue release vmware-vsphere $LOCK_TIME
		trap '' EXIT

		$0 post_net_config -i $VMWARE_VSPHERE_HOST_IP --htvcenter-internal-cmd true
		;;

	add_pg_up)
		# check requirements
		if [ "$VMWARE_VSPHERE_VSWITCH_NAME" == "" ]; then
			htvcenter_post_event 0 "add_pg_up" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, VSwitch Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_vsphere_usage
		fi
		if [ "$VMWARE_VSPHERE_PORTGROUP_NAME" == "" ]; then
			htvcenter_post_event 0 "add_pg_up" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, Portgroup Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_vsphere_usage
		fi
		if [ "$VMWARE_VSPHERE_UPLINK" == "" ]; then
			htvcenter_post_event 0 "add_pg_up" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, Uplink Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_vsphere_usage
		fi

		LOCK_TIME=`htvcenter_lock_queue aquire vmware-vsphere`
		trap "htvcenter_lock_queue release vmware-vsphere $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		VMWARE_VSPHERE_PORTGROUP_NAME=`echo $VMWARE_VSPHERE_PORTGROUP_NAME | sed -e "s/@/ /g"`
		if ! $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/bin/perl/vspherecfg-vswitch-lamw-mod.pl --add-pg-uplink $VMWARE_VSPHERE_UPLINK --pg "$VMWARE_VSPHERE_PORTGROUP_NAME" $VMWARE_VSPHERE_VSWITCH_NAME; then
			htvcenter_post_event 0 "add_pg_up" 3 "htvcenter-vmware-vsphere-network" "Failed to add uplink $VMWARE_VSPHERE_UPLINK to portgroup $VMWARE_VSPHERE_PORTGROUP_NAME VSwitch $VMWARE_VSPHERE_VSWITCH_NAME on vSphere Host $VMWARE_VSPHERE_HOST_IP!"

			htvcenter_lock_queue release vmware-vsphere $LOCK_TIME
			trap '' EXIT

			exit 1
		fi

		htvcenter_lock_queue release vmware-vsphere $LOCK_TIME
		trap '' EXIT

		$0 post_net_config -i $VMWARE_VSPHERE_HOST_IP --htvcenter-internal-cmd true
		;;

	remove_pg_up)
		# check requirements
		if [ "$VMWARE_VSPHERE_VSWITCH_NAME" == "" ]; then
			htvcenter_post_event 0 "remove_pg_up" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, VSwitch Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_vsphere_usage
		fi
		if [ "$VMWARE_VSPHERE_PORTGROUP_NAME" == "" ]; then
			htvcenter_post_event 0 "remove_pg_up" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, Portgroup Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_vsphere_usage
		fi
		if [ "$VMWARE_VSPHERE_UPLINK" == "" ]; then
			htvcenter_post_event 0 "remove_pg_up" 3 "htvcenter-vmware-vsphere-network" "Wrong usage, Uplink Name missing!"
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			vmware_vsphere_usage
		fi
		VMWARE_VSPHERE_PORTGROUP_NAME=`echo $VMWARE_VSPHERE_PORTGROUP_NAME | sed -e "s/@/ /g"`

		LOCK_TIME=`htvcenter_lock_queue aquire vmware-vsphere`
		trap "htvcenter_lock_queue release vmware-vsphere $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		if ! $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/bin/perl/vspherecfg-vswitch-lamw-mod.pl --del-pg-uplink $VMWARE_VSPHERE_UPLINK --pg "$VMWARE_VSPHERE_PORTGROUP_NAME" $VMWARE_VSPHERE_VSWITCH_NAME; then
			htvcenter_post_event 0 "remove_pg_up" 3 "htvcenter-vmware-vsphere-network" "Failed to remove uplink $VMWARE_VSPHERE_UPLINK to portgroup $VMWARE_VSPHERE_PORTGROUP_NAME VSwitch $VMWARE_VSPHERE_VSWITCH_NAME on vSphere Host $VMWARE_VSPHERE_HOST_IP!"

			htvcenter_lock_queue release vmware-vsphere $LOCK_TIME
			trap '' EXIT

			exit 1
		fi

		htvcenter_lock_queue release vmware-vsphere $LOCK_TIME
		trap '' EXIT

		$0 post_net_config -i $VMWARE_VSPHERE_HOST_IP --htvcenter-internal-cmd true
		;;

	list)
		$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/bin/python/vslist.py -s "$VMWARE_VSPHERE_HOST_IP" -o 443 -u "$VI_USERNAME" -p "$VI_PASSWORD" -n "$VMWARE_VSPHERE_ESX_HOST_NAME"
		;;

	post_net_config)
		mkdir -p $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/web/vmware-vsphere-stat/
		chmod 777 $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/web/vmware-vsphere-stat/
		VSPHERE_STATS="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/web/vmware-vsphere-stat/$VMWARE_VSPHERE_HOST_IP.net_config"
		VSPHERE_STATS_TMP="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/web/vmware-vsphere-stat/$VMWARE_VSPHERE_HOST_IP.net_config.tmp"
		rm -f $VSPHERE_STATS
		> $VSPHERE_STATS_TMP
		$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/vmware-vsphere/bin/python/vslist.py -s "$VMWARE_VSPHERE_HOST_IP" -o 443 -u "$VI_USERNAME" -p "$VI_PASSWORD" -n "$VMWARE_VSPHERE_ESX_HOST_NAME"  > $VSPHERE_STATS_TMP
		chmod 777 $VSPHERE_STATS_TMP
		/bin/mv $VSPHERE_STATS_TMP $VSPHERE_STATS
		;;



	*)
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE
		vmware_vsphere_usage
		;;


esac

