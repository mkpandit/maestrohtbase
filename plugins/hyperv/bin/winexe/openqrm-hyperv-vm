#!/bin/bash
# this script automatically manages hyperv
#
# htvcenter Enterprise developed by htvcenter Enterprise GmbH.
#
# All source code and content (c) Copyright 2014, htvcenter Enterprise GmbH unless specifically noted otherwise.
#
# This source code is released under the htvcenter Enterprise Server and Client License, unless otherwise agreed with htvcenter Enterprise GmbH.
# The latest version of this license can be found here: http://htvcenter-enterprise.com/license
#
# By using this software, you acknowledge having read this license and agree to be bound thereby.
#
#           http://htvcenter-enterprise.com
#
# Copyright 2014, htvcenter Enterprise GmbH <info@htvcenter-enterprise.com>
#
htvcenter_SERVER_BASE_DIR=$(dirname $0)/../../../..
htvcenter_SERVER_BASE_DIR=$(pushd $htvcenter_SERVER_BASE_DIR > /dev/null && echo $PWD && popd > /dev/null)
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-functions
# unblock starting command queue early for non-blocking + ui commands
HYPERV_COMMAND=$1
if [ "$HYPERV_COMMAND" == "update" ] || [ "$HYPERV_COMMAND" == "clone" ] || [ "$HYPERV_COMMAND" == "post_vm_list" ] || [ "$HYPERV_COMMAND" == "post_short_vm_list" ] || [ "$HYPERV_COMMAND" == "post_vm_config" ] || [ "$HYPERV_COMMAND" == "list" ] || [ "$HYPERV_COMMAND" == "post_iso_list" ] || [ "$HYPERV_COMMAND" == "post_host_statistics" ]; then
	htvcenter_unblock_starting_queue $@
	NON_BLOCKING=true
fi

export htvcenter_SOURCE_DIR="$htvcenter_SERVER_BASE_DIR/htvcenter/"
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-package-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hyperv/include/htvcenter-plugin-hyperv-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hyperv/etc/htvcenter-plugin-hyperv.conf
. $htvcenter_SERVER_BASE_DIR/htvcenter/etc/htvcenter-server.conf
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-server-functions
htvcenter_server_get_config
export resource_htvcenterserver=$htvcenter_SERVER_IP_ADDRESS
htvcenter_HYPERV_VM_TEMPLATE="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hyperv/etc/templates/htvcenter-hyperv-vm.xml"
htvcenter_HYPERV_ADD_NETWORK_DEVICE_TEMPLATE="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hyperv/etc/templates/htvcenter-hyperv-add-network-device.xml"
htvcenter_HYPERV_REMOVE_NETWORK_DEVICE_TEMPLATE="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hyperv/etc/templates/htvcenter-hyperv-remove-network-device.xml"
htvcenter_HYPERV_ADD_CDROM_DEVICE_TEMPLATE="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hyperv/etc/templates/htvcenter-hyperv-add-cdrom.xml"
htvcenter_HYPERV_VM_CONF_DIR="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hyperv/conf/vm"
htvcenter_HYPERV_HOST_CONF_DIR="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hyperv/conf/host"
htvcenter_HYPERV_STAT_DIR="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hyperv/web/hyperv-stat/"
export LANG=C
ORG_IFS="$IFS"
WINEXE="$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hyperv/bin/winexe/winexe"

# some defaults
DEFAULT_HYPERV_VM_CPU=1
DEFAULT_HYPERV_VM_RAM=512
DEFAULT_HYPERV_VM_DISK=4194304
DEFAULT_HYPERV_MINI_VM_DISK=1024

# let only root run this script
#WHOAMI=`whoami`
#if [ "$WHOAMI" != "root" ]; then
#	echo "ERROR: Please run this script as root!"
#	exit 6
#fi

# make sure required deps are installed
if ! check_hyperv_deps; then
	if [ "$NON_BLOCKING" != "true" ]; then
		htvcenter_unblock_starting_queue $@
	fi
	exit 1
fi

# conf dirs existing ?
if [ ! -d "$htvcenter_HYPERV_VM_CONF_DIR" ]; then
	mkdir -p $htvcenter_HYPERV_VM_CONF_DIR
fi
if [ ! -d "$htvcenter_HYPERV_HOST_CONF_DIR" ]; then
	mkdir -p $htvcenter_HYPERV_HOST_CONF_DIR
fi
if [ ! -d "$htvcenter_HYPERV_STAT_DIR" ]; then
	mkdir -p $htvcenter_HYPERV_STAT_DIR
	chmod 777 $htvcenter_HYPERV_STAT_DIR
fi


function hyperv_usage() {
	echo "Usage : $0 configure <-i hyperv-server-ip> <-eu hyperv-server-username> <-ep hyperv-server-password> <-eh hyperv-server-hostname> <-ed hyperv-server-domainname>"
	echo "        $0 start/stop/reboot/remove/list <-i hyperv-server-ip> <-n vm-name>"
	echo "        $0 create/update <-i hyperv-server-ip> <-n vm-name> <-m mac-address> <-l datastore> <-vmtype hyperv-vm-local/hyperv-vm-net> [ -r memory ] [-d disk-size ] [-c cpus ] [-va vnc-password ] [-vp vnc-port ] [-b local/network/cdrom/iso ] [--iso [datastore]iso ] [--existing-vhd [datastore]vhd]"
	echo "        $0 post_host_statistics <-i hyperv-server-ip>"
	echo "        $0 post_vm_list <-i hyperv-server-ip>"
	echo "        $0 post_short_vm_list <-i hyperv-server-ip>"
	echo "        $0 post_vm_config <-i hyperv-server-ip> <-n vm-name>"
	echo "        $0 setboot_by_mac <-m mac-address> <-b local/network/cdrom/iso> <-i hyperv-server-ip>"
	echo "        $0 setboot <-n vm-name> <-b local/network/cdrom/iso> <-i hyperv-server-ip>"
	echo "        $0 fence <-m mac-address> <-i hyperv-server-ip>"
	echo "        $0 host_shutdown/host_reboot <-i hyperv-server-ip>"
	echo "        $0 post_iso_list <-i hyperv-server-ip>"
	echo "        $0 post_file_list <-i hyperv-server-ip> <--path path>"
	echo "        $0 assign_by_mac <-i hyperv-server-ip> <-m mac-address> <-l datastore> <-d vhd>"
	echo "        $0 deassign_by_mac <-i hyperv-server-ip> <-m mac-address> <-d vhd>"
	echo "        $0 stop_by_mac <-i hyperv-server-ip> <-m mac-address>"
	echo "        $0 reboot_by_mac <-i hyperv-server-ip> <-m mac-address>"
	echo ""
	echo "Optional parameters:"
	echo "             [--htvcenter-ui-user <username>]"
	echo "             [--htvcenter-internal-cmd <true/false>]"
	echo "             [--htvcenter-cmd-mode <regular/background/fork>]"
	exit 1
}


# debugging
exec 2>> /var/log/hyperv-commands.log
set -x


FULL_COMMANDLINE="$0 $@"
HYPERV_COMMAND=$1
shift
while [ $# -ne 0 ]; do
	case "$1" in
		-n)
			HYPERV_VM_NAME=$2
			shift
			;;
		-c)
			HYPERV_VM_CPU=$2
			shift
			;;
		-m)
			HYPERV_VM_MAC=$2
			shift
			;;
		-m1)
			HYPERV_VM_MAC2=$2
			shift
			;;
		-m2)
			HYPERV_VM_MAC3=$2
			shift
			;;
		-m3)
			HYPERV_VM_MAC4=$2
			shift
			;;
		-m4)
			HYPERV_VM_MAC5=$2
			shift
			;;
		-t)
			HYPERV_VM_NIC_TYPE1=$2
			shift
			;;
		-t1)
			HYPERV_VM_NIC_TYPE2=$2
			shift
			;;
		-t2)
			HYPERV_VM_NIC_TYPE3=$2
			shift
			;;
		-t3)
			HYPERV_VM_NIC_TYPE4=$2
			shift
			;;
		-t4)
			HYPERV_VM_NIC_TYPE5=$2
			shift
			;;
		-v)
			HYPERV_VM_NIC_VSWITCH1=$2
			shift
			;;
		-v1)
			HYPERV_VM_NIC_VSWITCH2=$2
			shift
			;;
		-v2)
			HYPERV_VM_NIC_VSWITCH3=$2
			shift
			;;
		-v3)
			HYPERV_VM_NIC_VSWITCH4=$2
			shift
			;;
		-v4)
			HYPERV_VM_NIC_VSWITCH5=$2
			shift
			;;
		-r)
			HYPERV_VM_RAM=$2
			shift
			;;
		-d)
			HYPERV_VM_DISK=$2
			shift
			;;
		-i)
			HYPERV_HOST_IP=$2
			shift
			;;
		-b)
			HYPERV_VM_BOOT=$2
			shift
			;;
		-va)
			HYPERV_VM_VNC_AUTH=$2
			shift
			;;
		-vp)
			HYPERV_VM_VNC_PORT=$2
			shift
			;;
		-u)
			htvcenter_USERNAME=$2
			shift
			;;
		-p)
			htvcenter_PASSWORD=$2
			shift
			;;
		-eu)
			HYPERV_USERNAME=$2
			shift
			;;
		-ep)
			HYPERV_PASSWORD=$2
			shift
			;;
		-eh)
			HYPERV_HOSTNAME=$2
			shift
			;;
		-ed)
			HYPERV_DOMAINNAME=$2
			shift
			;;
		-l)
			HYPERV_VM_DATASTORE=$2
			shift
			;;
		-x)
			HYPERV_VM_COMPONENT_NUMBER=$2
			shift
			;;
		-vmtype)
			HYPERV_VM_TYPE=$2
			shift
			;;
		-iso)
			HYPERV_VM_ISO=$2
			shift
			;;
		--path)
			HYPERV_VM_PATH=$2
			shift
			;;
		--existing-vhd)
			HYPERV_VM_EXISTING_VMDK=$2
			shift
			;;
		--guest-id)
			HYPERV_GUEST_ID=$2
			shift
			;;

		--htvcenter-ui-user)
			htvcenter_UI_USER=$2
			shift
			;;
		--htvcenter-internal-cmd)
			htvcenter_INTERNAL_CMD=$2
			shift
			;;
		--htvcenter-cmd-mode)
			htvcenter_CMD_MODE=$2
			shift
			;;

		*)
			if [ "$NON_BLOCKING" != "true" ]; then
				htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			fi
			echo "ERROR: Free commandline arguments are not allowed"
			hyperv_usage
			exit 6
			;;
	esac
	shift
done


# command set ?
if [ "$HYPERV_COMMAND" == "" ]; then
	htvcenter_post_event 0 "parameter_check" 3 "htvcenter-hyperv" "Wrong usage, no command given!"
	htvcenter_unblock_starting_queue $FULL_COMMANDLINE
	hyperv_usage
fi
# Hyper-V ip set ?
if [ "$HYPERV_HOST_IP" == "" ]; then
	htvcenter_post_event 0 "parameter_check" 3 "htvcenter-hyperv" "Wrong usage, no Hyper-V ip-adress given!"
	if [ "$NON_BLOCKING" != "true" ]; then
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE
	fi
	hyperv_usage
fi
# VM name set ?
if [ "$HYPERV_COMMAND" != "list" ] && [ "$HYPERV_COMMAND" != "setboot_by_mac" ] && [ "$HYPERV_COMMAND" != "post_vm_list" ] && [ "$HYPERV_COMMAND" != "post_short_vm_list" ] && [ "$HYPERV_COMMAND" != "fence" ]  && [ "$HYPERV_COMMAND" != "configure" ] && [ "$HYPERV_COMMAND" != "post_host_statistics" ] && [ "$HYPERV_COMMAND" != "host_shutdown" ] && [ "$HYPERV_COMMAND" != "host_reboot" ]  && [ "$HYPERV_COMMAND" != "post_iso_list" ]  && [ "$HYPERV_COMMAND" != "post_file_list" ]  && [ "$HYPERV_COMMAND" != "post_vm_components" ]  && [ "$HYPERV_COMMAND" != "deassign_by_mac" ] && [ "$HYPERV_COMMAND" != "assign_by_mac" ] && [ "$HYPERV_COMMAND" != "stop_by_mac" ] && [ "$HYPERV_COMMAND" != "reboot_by_mac" ]; then
	if [ "$HYPERV_VM_NAME" == "" ]; then
		htvcenter_post_event 0 "parameter_check" 3 "htvcenter-hyperv" "Wrong usage, VM name missing!"
		if [ "$NON_BLOCKING" != "true" ]; then
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
		fi
		hyperv_usage
	fi
fi
# host configured ?
if [ "$HYPERV_COMMAND" != "configure" ]; then
	if [ ! -f "$htvcenter_HYPERV_HOST_CONF_DIR/$HYPERV_HOST_IP.conf" ]; then
		htvcenter_post_event 0 "parameter_check" 3 "htvcenter-hyperv" "Hyper-V Host configuration missing! Please create the configuration first."
		if [ "$NON_BLOCKING" != "true" ]; then
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
		fi
		hyperv_usage
	else
		# source the host configuration
		. $htvcenter_HYPERV_HOST_CONF_DIR/$HYPERV_HOST_IP.conf
	fi
fi
if [ "$htvcenter_UI_USER" != "" ]; then
	htvcenter_UI_USER_PARAMETER=" --htvcenter-ui-user $htvcenter_UI_USER"
fi

. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/hyperv/bin/htvcenter-hyperv-vm-$version
