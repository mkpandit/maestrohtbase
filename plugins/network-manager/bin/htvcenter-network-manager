#!/bin/bash
# this script automatically manages network devices
#
# htvcenter Enterprise developed by htvcenter Enterprise GmbH.
#
# All source code and content (c) Copyright 2014, htvcenter Enterprise GmbH unless specifically noted otherwise.
#
# This source code is released under the htvcenter Enterprise Server and Client License, unless otherwise agreed with htvcenter Enterprise GmbH.
# The latest version of this license can be found here: http://htvcenter-enterprise.com/license
#
# By using this software, you acknowledge having read this license and agree to be bound thereby.
#
#           http://htvcenter-enterprise.com
#
# Copyright 2014, htvcenter Enterprise GmbH <info@htvcenter-enterprise.com>
#
htvcenter_SERVER_BASE_DIR=$(dirname $0)/../../../..
htvcenter_SERVER_BASE_DIR=$(pushd $htvcenter_SERVER_BASE_DIR > /dev/null && echo $PWD && popd > /dev/null)
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-functions
export htvcenter_SOURCE_DIR="$htvcenter_SERVER_BASE_DIR/htvcenter/"
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-package-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/network-manager/include/htvcenter-plugin-network-manager-functions
htvcenter_POSTENCODE="$htvcenter_SERVER_BASE_DIR/htvcenter/sbin/htvcenter-postencode"
if [ -f $htvcenter_RESOURCE_PARAMETER_FILE ]; then
	. $htvcenter_RESOURCE_PARAMETER_FILE
	htvcenter_SERVER_IP=$resource_htvcenterserver
	htvcenter_EXEC_PORT=$resource_execdport
elif [ -f $htvcenter_SERVER_BASE_DIR/htvcenter/etc/htvcenter-server.conf ]; then
	. $htvcenter_SERVER_BASE_DIR/htvcenter/etc/htvcenter-server.conf
	. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-server-functions
	htvcenter_server_get_config
	htvcenter_SERVER_IP=$htvcenter_SERVER_IP_ADDRESS
	resource_id=0
	resource_htvcenterserver=$htvcenter_SERVER_IP_ADDRESS
	htvcenter_web_protocol=$htvcenter_WEB_PROTOCOL
fi
export LANG=C
# define wget to use with https
if [ "$htvcenter_web_protocol" == "https" ]; then
	WGET_NO_CERT_CHECK="--no-check-certificate"
fi

# let only root run this script
WHOAMI=`whoami`
if [ "$WHOAMI" != "root" ]; then
	echo "ERROR: Please run this script as root!"
	exit 6
fi

# deps installed ?
# screen
if ! htvcenter_full_fill_os_dependency screen screen; then
	if [ "$NON_BLOCKING" != "true" ]; then
		htvcenter_unblock_starting_queue $@
	fi
	exit 1
fi
# wget
if ! htvcenter_full_fill_os_dependency wget wget; then
	if [ "$NON_BLOCKING" != "true" ]; then
		htvcenter_unblock_starting_queue $@
	fi
	exit 1
fi
# procmail for lockfile
if ! htvcenter_full_fill_os_dependency lockfile procmail; then
	if [ "$NON_BLOCKING" != "true" ]; then
		htvcenter_unblock_starting_queue $@
	fi
	exit 1
fi
# bridge-utils
if ! htvcenter_full_fill_os_dependency brctl bridge-utils; then
	if [ "$NON_BLOCKING" != "true" ]; then
		htvcenter_unblock_starting_queue $@
	fi
	exit 1
fi
# iptables
if ! htvcenter_full_fill_os_dependency iptables iptables; then
	if [ "$NON_BLOCKING" != "true" ]; then
		htvcenter_unblock_starting_queue $@
	fi
	exit 1
fi
# dnsmasq
if ! htvcenter_full_fill_os_dependency dnsmasq dnsmasq; then
	if [ "$NON_BLOCKING" != "true" ]; then
		htvcenter_unblock_starting_queue $@
	fi
	exit 1
fi
if [ -f /etc/debian_version ]; then
	# vlan
	if ! htvcenter_full_fill_os_dependency vconfig vlan; then
		if [ "$NON_BLOCKING" != "true" ]; then
			htvcenter_unblock_starting_queue $@
		fi
		exit 1
	fi
elif [ -f /etc/redhat-release ]; then
	# vlan
	if ! htvcenter_full_fill_os_dependency vconfig vconfig; then
		if [ "$NON_BLOCKING" != "true" ]; then
			htvcenter_unblock_starting_queue $@
		fi
		exit 1
	fi
elif [ -f /etc/SuSE-release ]; then
	# vlan
	if ! htvcenter_full_fill_os_dependency vconfig vlan; then
		if [ "$NON_BLOCKING" != "true" ]; then
			htvcenter_unblock_starting_queue $@
		fi
		exit 1
	fi
fi
# load vlan kernel module
modprobe 8021q


function network_manager_usage() {
	echo "Usage : $0 post_config <-u username> <-p password>"
	echo "        $0 add_br <-b bridge-name> <-n network-card> <-i brige_ip> <-s brige_subnet> <-u username> <-p password> [-f bridge-fd ] [-h brige_hello] [-a brige_maxage] [-t brige_stp] [-m brige_mac] [-g brige_gateway] [-df dnsmasq_first_ip ] [-dl dnsmasq_last_ip ] [-v VLAN ID]"
	echo "        $0 remove_br <-b bridge-name> <-u username> <-p password>"
	echo ""
	echo "Optional parameters:"
	echo "             [--htvcenter-ui-user <username>]"
	echo "             [--htvcenter-internal-cmd <true/false>]"
	echo "             [--htvcenter-cmd-mode <regular/background/fork>]"
	exit 1
}

FULL_COMMANDLINE="$0 $@"
NETWORK_MANAGER_MANAGER_COMMAND=$1
shift

while [ $# -ne 0 ]; do
	case "$1" in
		-n)
			NETWORK_CARD=$2
			shift
			;;
		-b)
			NETWORK_BRIDGE_NAME=$2
			shift
			;;
		-f)
			NETWORK_BRIDGE_FD=$2
			shift
			;;
		-h)
			NETWORK_BRIDGE_HELLO=$2
			shift
			;;
		-a)
			NETWORK_BRIDGE_MAXAGE=$2
			shift
			;;
		-t)
			NETWORK_BRIDGE_STP=$2
			shift
			;;
		-m)
			NETWORK_BRIDGE_MAC=$2
			shift
			;;
		-i)
			NETWORK_BRIDGE_IP_ADDRESS=$2
			shift
			;;
		-s)
			NETWORK_BRIDGE_SUBNETMASK=$2
			shift
			;;
		-g)
			NETWORK_BRIDGE_GATEWAY=$2
			shift
			;;
		-v)
			NETWORK_BRIDGE_VLAN=$2
			shift
			;;
		-df)
			NETWORK_BRIDGE_DNSMASQ_IP_FIRST=$2
			shift
			;;
		-dl)
			NETWORK_BRIDGE_DNSMASQ_IP_LAST=$2
			shift
			;;
		-u)
			NETWORK_MANAGER_htvcenter_USERNAME=$2
			shift
			;;
		-p)
			NETWORK_MANAGER_htvcenter_PASSWORD=$2
			shift
			;;
		--htvcenter-ui-user)
			htvcenter_UI_USER=$2
			shift
			;;
		--htvcenter-internal-cmd)
			htvcenter_INTERNAL_CMD=$2
			shift
			;;
		--htvcenter-cmd-mode)
			htvcenter_CMD_MODE=$2
			shift
			;;
		*)
			if [ "$NON_BLOCKING" != "true" ]; then
				htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			fi
			echo "ERROR: Free commandline arguments are not allowed"
			network_manager_manager_usage
			exit 6
			;;
	esac
	shift
done

if [ "$htvcenter_UI_USER" != "" ]; then
	htvcenter_UI_USER_PARAMETER=" --htvcenter-ui-user $htvcenter_UI_USER"
fi

# main
case "$NETWORK_MANAGER_MANAGER_COMMAND" in

	post_config)
		LOCK_TIME=`htvcenter_lock_queue aquire network-manager`
		trap "htvcenter_lock_queue release network-manager $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		TMP_CONFIG=`mktemp /tmp/network-manager.XXXXXX`
		SYSTEM_STATUS_TMP=$resource_id.network_config
		> $SYSTEM_STATUS_TMP
		ALL_NET_DEV_LIST=""
		for NET_DEV in `ifconfig -a | grep HWaddr | awk '{ print $1 }'`; do
			ALL_NET_DEV_LIST="$ALL_NET_DEV_LIST $NET_DEV"
			if brctl show | tail -n+2 | awk '{ print $1 }' | grep -w $NET_DEV 1>/dev/null; then
				ATTACHED_TO=`brctl show | tail -n+2 | grep -w $NET_DEV | awk '{ print $4 }'`
				BRIDGE_MAC=`ifconfig $NET_DEV | grep HWaddr | awk '{ print $5 }'`
				BRIDGE_IP_LIST=`get_ip_list_for_dev $NET_DEV`
				echo "b@$NET_DEV@$BRIDGE_MAC@$BRIDGE_IP_LIST@$ATTACHED_TO" >> $SYSTEM_STATUS_TMP
			else
				NET_DEV_MAC=`ifconfig $NET_DEV | grep HWaddr | awk '{ print $5 }'`
				NET_DEV_IP_LIST=`get_ip_list_for_dev $NET_DEV`
				echo "n@$NET_DEV@$NET_DEV_MAC@$NET_DEV_IP_LIST" >> $SYSTEM_STATUS_TMP
			fi
		done
		if ! wget -q $WGET_NO_CERT_CHECK -O /dev/null --http-user=$NETWORK_MANAGER_htvcenter_USERNAME --http-password=$NETWORK_MANAGER_htvcenter_PASSWORD  --post-file=`$htvcenter_POSTENCODE $SYSTEM_STATUS_TMP` $htvcenter_web_protocol://$htvcenter_SERVER_IP/htvcenter/base/plugins/network-manager/network-manager-action.php?network_manager_command=get_network_config; then
			htvcenter_post_event 0 "post_vg" 2 "htvcenter-network-manager" "Could not post the device list to the htvcenter-server at $htvcenter_SERVER_IP!"
		fi
		rm -f $SYSTEM_STATUS_TMP $SYSTEM_STATUS_TMP.post

		htvcenter_lock_queue release network-manager $LOCK_TIME
		trap '' EXIT
		;;

	add_br)
		RETURN_CODE=0
		RETURN_MSG=""
		if [ "$NETWORK_BRIDGE_NAME" == "" ] || [ "$NETWORK_CARD" == "" ] || [ "$NETWORK_BRIDGE_IP_ADDRESS" == "" ] || [ "$NETWORK_BRIDGE_SUBNETMASK" == "" ]; then
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			network_manager_usage
		fi
		if `brctl show | tail -n+2 | grep -w $NETWORK_BRIDGE_NAME 1>/dev/null`; then
			RETURN_CODE=1
			RETURN_MSG="Network bridge $NETWORK_BRIDGE_NAME already exists on resource $resource_id."
			htvcenter_post_event 0 "add_br" 3 "htvcenter-network-manager" "$RETURN_MSG"
		fi
		# if the bridge-ports nic has already the same ip as the new vlan nic
		if [ "$NETWORK_BRIDGE_VLAN" != "" ] && [ "$NETWORK_BRIDGE_VLAN" != "0" ]; then
			NETWORK_CARD_CONFIG=`get_ip_list_for_dev $NETWORK_CARD`
			NETWORK_CARD_IP_ADDRESS=`echo $NETWORK_CARD_CONFIG | cut -d'/' -f1`
			if [ "$NETWORK_CARD_IP_ADDRESS" == "$NETWORK_BRIDGE_IP_ADDRESS" ]; then
				htvcenter_post_event 0 "add_br" 2 "htvcenter-network-manager" "IP Address $NETWORK_BRIDGE_IP_ADDRESS already in use by $NETWORK_CARD on resource $resource_id."
				RETURN_CODE=1
				RETURN_MSG="IP Address $NETWORK_BRIDGE_IP_ADDRESS already in use by $NETWORK_CARD on resource $resource_id."
			fi
		fi

		LOCK_TIME=`htvcenter_lock_queue aquire network-manager`
		trap "htvcenter_lock_queue release network-manager $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		htvcenter_save_network_config
		if [ "$RETURN_CODE" == 0 ]; then
			if [ "$NETWORK_CARD" != "" ]; then
				ifdown $NETWORK_CARD
			fi
			htvcenter_add_interface bridge"@"$NETWORK_BRIDGE_NAME"@"$NETWORK_CARD"@"$NETWORK_BRIDGE_FD"@"$NETWORK_BRIDGE_HELLO"@"$NETWORK_BRIDGE_MAXAGE"@"$NETWORK_BRIDGE_STP"@"$NETWORK_BRIDGE_MAC"@"$NETWORK_BRIDGE_IP_ADDRESS"@"$NETWORK_BRIDGE_SUBNETMASK"@"$NETWORK_BRIDGE_GATEWAY"@"$NETWORK_BRIDGE_VLAN"@"
			ifdown $NETWORK_BRIDGE_NAME 2>/dev/null
			if [ "$NETWORK_CARD" != "" ]; then
				ifup $NETWORK_CARD
			fi
			# bring up the new bridge
			if ! ifup $NETWORK_BRIDGE_NAME; then
				htvcenter_rollback_network_config
				ifconfig $NETWORK_BRIDGE_NAME down
				brctl delbr $NETWORK_BRIDGE_NAME
				if [ "$NETWORK_CARD" != "" ]; then
					ifup $NETWORK_CARD
				fi
				htvcenter_post_event 0 "add_br" 2 "htvcenter-network-manager" "Error activating bridge $NETWORK_BRIDGE_NAME. Rolling back network-configuration on resource $resource_id."
				RETURN_CODE=1
				RETURN_MSG="Error activating bridge $NETWORK_BRIDGE_NAME on resource $resource_id."
			fi
		fi

		# check if the htvcenter still can be reached, if not roll back
		if [ "$RETURN_CODE" == 0 ]; then
			if ! ping -c 1 $htvcenter_SERVER_IP -w 5 -W 5 2>/dev/null 1>/dev/null; then
				htvcenter_rollback_network_config
				ifconfig $NETWORK_BRIDGE_NAME down
				brctl delbr $NETWORK_BRIDGE_NAME
				if [ "$NETWORK_CARD" != "" ]; then
					ifup $NETWORK_CARD
				fi
				htvcenter_post_event 0 "add_br" 2 "htvcenter-network-manager" "Error reaching htvcenter Server at $htvcenter_SERVER_IP. Rolling back network-configuration on resource $resource_id."
				RETURN_CODE=1
				RETURN_MSG="Error reaching htvcenter Server at $htvcenter_SERVER_IP on resource $resource_id."
			fi
		fi

		# in case this is the htvcenter Server itself and the htvcenter Interface changed we need to adapt the htvcenter-server.conf
		if [ "$RETURN_CODE" == 0 ]; then
			if [ -f $htvcenter_SERVER_BASE_DIR/htvcenter/etc/htvcenter-server.conf ]; then
				if [ "$NETWORK_CARD" != "" ]; then
					if [ "$htvcenter_SERVER_INTERFACE" == "$NETWORK_CARD" ]; then
						sed -i -e "s/^htvcenter_SERVER_INTERFACE=.*/htvcenter_SERVER_INTERFACE=\"$NETWORK_BRIDGE_NAME\"/g" $htvcenter_SERVER_BASE_DIR/htvcenter/etc/htvcenter-server.conf
					fi
				fi
			fi
		fi


#		# dnsmasq - take the subnet from the bridge
#		if [ "$RETURN_CODE" == 0 ]; then
#			if [ "$NETWORK_BRIDGE_SUBNETMASK" != "" ] && [ "$NETWORK_BRIDGE_IP_ADDRESS" != "" ] && [ "$NETWORK_BRIDGE_DNSMASQ_IP_FIRST" != "" ] && [ "$NETWORK_BRIDGE_DNSMASQ_IP_LAST" != "" ]; then
#				NETWORK_BRIDGE_DNSMASQ_NETWORK=`get_network_address $NETWORK_BRIDGE_IP_ADDRESS $NETWORK_BRIDGE_SUBNETMASK`
#				# iptables masq
#				if ! iptables -t nat -A POSTROUTING -s $NETWORK_BRIDGE_DNSMASQ_NETWORK ! -d $NETWORK_BRIDGE_DNSMASQ_NETWORK -j MASQUERADE; then
#					RETURN_CODE=1
#					RETURN_MSG="Error masquarading dsnmasq network $NETWORK_BRIDGE_DNSMASQ_NETWORK for $NETWORK_BRIDGE_GATEWAY for $NETWORK_BRIDGE_NAME on resource $resource_id."
#					htvcenter_post_event 0 "add_br" 3 "htvcenter-network-manager" "$RETURN_MSG"
#				fi
#				# dnsmasq
#				if [ "$RETURN_CODE" == 0 ]; then
#					if ! dnsmasq --strict-order --bind-interfaces --pid-file=/var/run/dnsmasq.$NETWORK_BRIDGE_NAME.pid --listen-address $NETWORK_BRIDGE_IP_ADDRESS --dhcp-range $NETWORK_BRIDGE_DNSMASQ_IP_FIRST,$NETWORK_BRIDGE_DNSMASQ_IP_LAST --dhcp-no-override --except-interface=lo --interface=$NETWORK_BRIDGE_NAME; then
#						RETURN_CODE=1
#						RETURN_MSG="Error starting dsnmasq network $NETWORK_BRIDGE_DNSMASQ_NETWORK for $NETWORK_BRIDGE_GATEWAY for $NETWORK_BRIDGE_NAME on resource $resource_id."
#						htvcenter_post_event 0 "add_br" 3 "htvcenter-network-manager" "$RETURN_MSG"
#					fi
#					echo 1 > /proc/sys/net/ipv4/ip_forward
#				fi
#				DNSMASQ_PID=`cat /var/run/dnsmasq.$NETWORK_BRIDGE_NAME.pid`
#			fi
#		fi




		if [ "$RETURN_CODE" == 0 ]; then
			RETURN_MSG="ok"
		fi
		# Send message
		SYSTEM_STATUS_TMP=$resource_id.network_stat
		> $SYSTEM_STATUS_TMP
		echo $RETURN_MSG > $SYSTEM_STATUS_TMP
		if ! wget -q $WGET_NO_CERT_CHECK -O /dev/null --http-user=$NETWORK_MANAGER_htvcenter_USERNAME --http-password=$NETWORK_MANAGER_htvcenter_PASSWORD  --post-file=`$htvcenter_POSTENCODE $SYSTEM_STATUS_TMP` $htvcenter_web_protocol://$htvcenter_SERVER_IP/htvcenter/base/plugins/network-manager/network-manager-action.php?network_manager_command=get_network_config; then
			htvcenter_post_event 0 "add_br" 2 "htvcenter-network-manager" "Could not post the device list to the htvcenter-server at $htvcenter_SERVER_IP!"
		fi
		rm -f $SYSTEM_STATUS_TMP

		htvcenter_lock_queue release network-manager $LOCK_TIME
		trap '' EXIT

		exit $RETURN_CODE
		;;


	remove_br)
		RETURN_CODE=0
		RETURN_MSG=""
		if [ "$NETWORK_BRIDGE_NAME" == "" ]; then
			htvcenter_unblock_starting_queue $FULL_COMMANDLINE
			network_manager_usage
		fi
		if `! brctl show | tail -n+2 | grep -w $NETWORK_BRIDGE_NAME 1>/dev/null`; then
			RETURN_CODE=1
			RETURN_MSG="Network bridge $NETWORK_BRIDGE_NAME does not exists on resource $resource_id."
			htvcenter_post_event 0 "add_br" 3 "htvcenter-network-manager" "$RETURN_MSG"
		fi
		NETWORK_CARD=`brctl show | tail -n+2 | grep -w $NETWORK_BRIDGE_NAME | awk '{ print $4 }'`
		# if this is htvcenter itself
		if [ -f $htvcenter_SERVER_BASE_DIR/htvcenter/etc/htvcenter-server.conf ]; then
			if [ "$htvcenter_SERVER_INTERFACE" == "$NETWORK_BRIDGE_NAME" ]; then
				if [ "$NETWORK_CARD" == "" ]; then
					RETURN_CODE=1
					RETURN_MSG="$NETWORK_BRIDGE_NAME is the htvcenter Management Network Interface! Not remove bridge $NETWORK_BRIDGE_NAME which does not have any Interfaces attached."
					htvcenter_post_event 0 "add_br" 3 "htvcenter-network-manager" "$RETURN_MSG"
				fi
			fi
		fi

		LOCK_TIME=`htvcenter_lock_queue aquire network-manager`
		trap "htvcenter_lock_queue release network-manager $LOCK_TIME" EXIT
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE

		htvcenter_post_event 0 "remove_br" 5 "htvcenter-network-manager" "Removing network bridge $NETWORK_BRIDGE_NAME on resource $resource_id."
		htvcenter_save_network_config


#		# clean up iptables + dnsmasq
#		if [ "$NETWORK_CARD_IP_ADDRESS" != "" ] && [ "$NETWORK_CARD_SUBNET_MASK" != "" ]; then
#			NETWORK_BRIDGE_DNSMASQ_NETWORK=`get_network_address $NETWORK_CARD_IP_ADDRESS $NETWORK_CARD_SUBNET_MASK`
#			iptables -t nat -D POSTROUTING -s $NETWORK_BRIDGE_DNSMASQ_NETWORK -j MASQUERADE
#			DNSMASQ_PID=`cat /var/run/dnsmasq.$NETWORK_BRIDGE_NAME.pid 2>/dev/null` && kill -9 $DNSMASQ_PID
#		fi

		# if network-card = attached_to apply previous ip config of the removed bridge
		if [ "$NETWORK_CARD" != "" ]; then
			# if it is a real phys. interface and not a VLAN nic
			if ! echo $NETWORK_CARD | grep .[0-9]\.[0-9] 1>/dev/null; then
				# get ip config of attached_to to apply to physical device later
				NETWORK_CARD_CONFIG=`get_ip_list_for_dev $NETWORK_BRIDGE_NAME`
				NETWORK_CARD_IP_ADDRESS=`echo $NETWORK_CARD_CONFIG | cut -d'/' -f1`
				NETWORK_CARD_BROADCAST=`echo $NETWORK_CARD_CONFIG | cut -d'/' -f2`
				NETWORK_CARD_SUBNET_MASK=`echo $NETWORK_CARD_CONFIG | cut -d'/' -f3`
				NETWORK_CARD_GATEWAY=`route -n | grep -w ^0.0.0.0 | grep -w $NETWORK_BRIDGE_NAME | awk '{ print $2 }'`
			fi
		fi

		# bring down the bridge and remove from config
		ifconfig $NETWORK_BRIDGE_NAME down
		brctl delbr $NETWORK_BRIDGE_NAME
		htvcenter_remove_interface bridge"@"$NETWORK_BRIDGE_NAME"@"$NETWORK_CARD
		if [ "$NETWORK_CARD_IP_ADDRESS" != "" ] && [ "$NETWORK_CARD_SUBNET_MASK" != "" ]; then
			# re-write config for nic
			htvcenter_add_interface nic"@"$NETWORK_CARD"@@@@@@@"$NETWORK_CARD_IP_ADDRESS"@"$NETWORK_CARD_SUBNET_MASK"@"$NETWORK_CARD_GATEWAY"@@"
		fi
		if [ "$NETWORK_CARD" != "" ]; then
			if ! echo $NETWORK_CARD | grep .[0-9]\.[0-9] 1>/dev/null; then
				ifdown $NETWORK_CARD
				ifup $NETWORK_CARD
			else
				# remove VLAN Interface
				ifconfig $NETWORK_CARD down
				vconfig rem $NETWORK_CARD
			fi
		fi

		# check if the htvcenter still can be reached, if not roll back
		if [ "$RETURN_CODE" == 0 ]; then
			if ! ping -c 1 $htvcenter_SERVER_IP -w 5 -W 5 2>/dev/null 1>/dev/null; then
				if [ "$NETWORK_CARD" != "" ]; then
					ifdown $NETWORK_CARD
				fi
				htvcenter_rollback_network_config
				ifup $NETWORK_BRIDGE_NAME
				htvcenter_post_event 0 "add_br" 2 "htvcenter-network-manager" "Error reaching htvcenter Server at $htvcenter_SERVER_IP. Rolling back network-configuration on resource $resource_id."
				RETURN_CODE=1
				RETURN_MSG="Error reaching htvcenter Server at $htvcenter_SERVER_IP on resource $resource_id."
			fi
		fi

		# in case this is the htvcenter Server itself and the htvcenter Interface changed we need to adapt the htvcenter-server.conf
		if [ "$RETURN_CODE" == 0 ]; then
			if [ -f $htvcenter_SERVER_BASE_DIR/htvcenter/etc/htvcenter-server.conf ]; then
				if [ "$htvcenter_SERVER_INTERFACE" == "$NETWORK_BRIDGE_NAME" ]; then
					if [ "$NETWORK_CARD" != "" ]; then
						sed -i -e "s/^htvcenter_SERVER_INTERFACE=.*/htvcenter_SERVER_INTERFACE=\"$NETWORK_CARD\"/g" $htvcenter_SERVER_BASE_DIR/htvcenter/etc/htvcenter-server.conf
					fi
				fi
			fi
		fi

		if [ "$RETURN_CODE" == 0 ]; then
			RETURN_MSG="ok"
			htvcenter_post_event 0 "remove_br" 5 "htvcenter-network-manager" "Removed network bridge $NETWORK_BRIDGE_NAME on resource $resource_id."
		fi
		# Send message
		SYSTEM_STATUS_TMP=$resource_id.network_stat
		> $SYSTEM_STATUS_TMP
		echo $RETURN_MSG > $SYSTEM_STATUS_TMP
		if ! wget -q $WGET_NO_CERT_CHECK -O /dev/null --http-user=$NETWORK_MANAGER_htvcenter_USERNAME --http-password=$NETWORK_MANAGER_htvcenter_PASSWORD  --post-file=`$htvcenter_POSTENCODE $SYSTEM_STATUS_TMP` $htvcenter_web_protocol://$htvcenter_SERVER_IP/htvcenter/base/plugins/network-manager/network-manager-action.php?network_manager_command=get_network_config; then
			htvcenter_post_event 0 "remove_br" 2 "htvcenter-network-manager" "Could not post the device list to the htvcenter-server at $htvcenter_SERVER_IP!"
		fi
		rm -f $SYSTEM_STATUS_TMP

		htvcenter_lock_queue release network-manager $LOCK_TIME
		trap '' EXIT

		exit $RETURN_CODE
		;;





	*)
		htvcenter_unblock_starting_queue $FULL_COMMANDLINE
		echo "ERROR: Free commandline arguments are not allowed!"
		network_manager_usage
		exit 6
		;;
esac

