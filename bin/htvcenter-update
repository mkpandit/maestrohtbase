#!/bin/bash
# this is the htvcenter commandline client
#
# htvcenter Enterprise developed by htvcenter Enterprise GmbH.
#
# All source code and content (c) Copyright 2014, htvcenter Enterprise GmbH unless specifically noted otherwise.
#
# This source code is released under the htvcenter Enterprise Server and Client License, unless otherwise agreed with htvcenter Enterprise GmbH.
# The latest version of this license can be found here: http://htvcenter-enterprise.com/license
#
# By using this software, you acknowledge having read this license and agree to be bound thereby.
#
#           http://htvcenter-enterprise.com
#
# Copyright 2014, htvcenter Enterprise GmbH <info@htvcenter-enterprise.com>
#

export PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/X11R6/bin

if [ "$htvcenter_SERVER_BASE_DIR" == "" ]; then
	htvcenter_SERVER_BASE_DIR=$(dirname $0)/../..
	htvcenter_SERVER_BASE_DIR=$(pushd $htvcenter_SERVER_BASE_DIR > /dev/null && echo $PWD && popd > /dev/null)
fi
export htvcenter_SERVER_BASE_DIR
. $htvcenter_SERVER_BASE_DIR/htvcenter/etc/htvcenter-server.conf
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-functions
. $htvcenter_SERVER_BASE_DIR/htvcenter/include/htvcenter-server-functions


# let only root run this script
WHOAMI=`whoami`
if [ "$WHOAMI" != "root" ]; then
	echo "ERROR: Please run this script as root!"
	exit 6
fi


function update_usage() {
	echo
	echo "Usage:"
	echo "`basename $0` help			- This help screen"
	echo
	echo "`basename $0` pre <-f>"
	echo "`basename $0` base <-f>"
	echo "`basename $0` post <-f>"
	echo "`basename $0` initrds <-f>"
	echo
}



function htvcenter_apply_old_config() {
	local NEW_CONF=$1
	local OLD_CONF=$2
	local ALL_CONFIG_FILES=""
	if [ -f "$NEW_CONF" ]; then
		ALL_CONFIG_FILES="$NEW_CONF"
	fi
	if [ -f "$OLD_CONF" ]; then
		ALL_CONFIG_FILES="$ALL_CONFIG_FILES $OLD_CONF"
	fi

	# checking new config against old
	for htvcenter_CONFIG_PARAM in `cat $ALL_CONFIG_FILES | grep -v ^"#" | grep "[A-Z][A-Z][A-Z][A-Z].*=.*" | cut -d'=' -f1 | uniq`; do
		#echo "   - checking parameter $htvcenter_CONFIG_PARAM"
		# do net adapt version values
		if [ "$htvcenter_CONFIG_PARAM" == "htvcenter_SERVER_VERSION" ]  || [ "$htvcenter_CONFIG_PARAM" == "htvcenter_MINOR_RELEASE_VERSION" ] || [ "$htvcenter_CONFIG_PARAM" == "htvcenter_PLUGIN_VERSION" ] || [ "$htvcenter_CONFIG_PARAM" == "#" ]; then
			continue
		fi
		# do not adapt deps + requires + descriptions
		if echo $htvcenter_CONFIG_PARAM | grep DEPENDENCIES 1>/dev/null; then
			continue
		fi
		if echo $htvcenter_CONFIG_PARAM | grep REQUIREMENTS 1>/dev/null; then
			continue
		fi
		if echo $htvcenter_CONFIG_PARAM | grep DESCRIPTION 1>/dev/null; then
			continue
		fi

		unset OLD_CONFIG_VALUE
		unset NEW_CONFIG_VALUE
		unset $htvcenter_CONFIG_PARAM
		if [ -f "$OLD_CONF" ]; then
			. $OLD_CONF
		else
			echo "NOTICE: $OLD_CONF does not exist!"
		fi
		eval OLD_CONFIG_VALUE=\$$htvcenter_CONFIG_PARAM
		unset $htvcenter_CONFIG_PARAM
		if [ -f "$NEW_CONF" ]; then
			. $NEW_CONF
		else
			echo "NOTICE: $NEW_CONF does not exist!"
		fi
		eval NEW_CONFIG_VALUE=\$$htvcenter_CONFIG_PARAM

		# existing in old config but not in new !
		if [ "$OLD_CONFIG_VALUE" != "" ] && [ "$NEW_CONFIG_VALUE" == "" ]; then
		   if [ -f "$NEW_CONF" ]; then
					if ! grep -w $htvcenter_CONFIG_PARAM $NEW_CONF 1>/dev/null; then
							echo "    - Config parameter $htvcenter_CONFIG_PARAM does not exist any more!"
					else
							echo "    - Config parameter $htvcenter_CONFIG_PARAM was set in old configuration."
							if [ "$FORCE_UPDATE" == "false" ]; then
									echo "    - e - Edit configuration"
									echo "    - k - Keep new configuration"
									echo
									read -n1 APPLY_CONFIG_PARAM
									case "$APPLY_CONFIG_PARAM" in
											e)
													echo
													echo "   - Editing configuration parameter $htvcenter_CONFIG_PARAM"
													echo
													echo -n "  $htvcenter_CONFIG_PARAM="
													read USER_INPUT_htvcenter_CONFIG_PARAM
													if [ -f "$NEW_CONF" ]; then
															sed -i -e "s#$htvcenter_CONFIG_PARAM.*=.*#$htvcenter_CONFIG_PARAM=\"$USER_INPUT_htvcenter_CONFIG_PARAM\"#g" $NEW_CONF
													else
															echo "NOTICE: $NEW_CONF does not exist!"
													fi
													break
													;;
											k)
													echo
													echo "   - Keeping new configuration for parameter $htvcenter_CONFIG_PARAM"
													break
													;;
									esac
							else
									echo "    - Applying old configuration for config parameter $htvcenter_CONFIG_PARAM"
									sed -i -e "s#$htvcenter_CONFIG_PARAM=.*#$htvcenter_CONFIG_PARAM=\"$OLD_CONFIG_VALUE\"#g" $NEW_CONF
							fi
					fi
			fi
			continue
		fi
		# existing in new config but not in old !
		if [ "$OLD_CONFIG_VALUE" == "" ] && [ "$NEW_CONFIG_VALUE" != "" ]; then
			while (true); do
				echo "    - Config parameter $htvcenter_CONFIG_PARAM is new!"
				echo "      $htvcenter_CONFIG_PARAM=$NEW_CONFIG_VALUE"

				if [ "$FORCE_UPDATE" == "false" ]; then
					echo "    - e - Edit configuration"
					echo "    - k - Keep new configuration"
					echo
					read -n1 APPLY_CONFIG_PARAM

					case "$APPLY_CONFIG_PARAM" in
						e)
							echo
							echo "   - Editing configuration parameter $htvcenter_CONFIG_PARAM"
							echo
							echo -n "  $htvcenter_CONFIG_PARAM="
							read USER_INPUT_htvcenter_CONFIG_PARAM
							if [ -f "$NEW_CONF" ]; then
								sed -i -e "s#$htvcenter_CONFIG_PARAM.*=.*#$htvcenter_CONFIG_PARAM=\"$USER_INPUT_htvcenter_CONFIG_PARAM\"#g" $NEW_CONF
							else
								echo "NOTICE: $NEW_CONF does not exist!"
							fi
							break
							;;
						k)
							echo
							echo "   - Keeping new configuration for parameter $htvcenter_CONFIG_PARAM"
							break
							;;
					esac
				else
					echo "   - Force enabled. Keeping new configuration for parameter $htvcenter_CONFIG_PARAM"
					break
				fi
			done

		elif [ "$OLD_CONFIG_VALUE" != "$NEW_CONFIG_VALUE" ]; then
		# existing in both configs but with different value
        
			while (true); do
				echo "    - Change detected for parameter $htvcenter_CONFIG_PARAM"
				echo
				echo "      old = $OLD_CONFIG_VALUE"
				echo "      new = $NEW_CONFIG_VALUE"
				echo

				if [ "$FORCE_UPDATE" == "false" ]; then
					echo "    - o - Apply old configuration"
					echo "    - k - Keep new configuration"
					echo
					read -n1 APPLY_CONFIG_PARAM

					case "$APPLY_CONFIG_PARAM" in
						o)
							echo "   - Applying old configuration"
							if [ -f "$NEW_CONF" ]; then
								sed -i -e "s#$htvcenter_CONFIG_PARAM.*=.*#$htvcenter_CONFIG_PARAM=\"$OLD_CONFIG_VALUE\"#g" $NEW_CONF
							else
								echo "NOTICE: $NEW_CONF does not exist!"
							fi
							break
							;;
						k)
							echo "   - Keeping new configuration"
							break
							;;
					esac
				else
					echo "   - Force enabled. Applying old configuration"
					if [ -f "$NEW_CONF" ]; then
						sed -i -e "s#$htvcenter_CONFIG_PARAM.*=.*#$htvcenter_CONFIG_PARAM=\"$OLD_CONFIG_VALUE\"#g" $NEW_CONF
					else
						echo "NOTICE: $NEW_CONF does not exist!"
					fi
					break
				fi
			done
		fi
	done
}



function pre_update() {
	echo "- Running pre update phase"
	# full backup of basedir
	echo "  - Taking full backup of $htvcenter_SERVER_BASE_DIR/htvcenter"
	rm -rf $htvcenter_SERVER_BASE_DIR/htvcenter_pre_update
	cp -aR $htvcenter_SERVER_BASE_DIR/htvcenter $htvcenter_SERVER_BASE_DIR/htvcenter_pre_update
	# db + state backup
	echo "  - Taking state + db backup"
	rm -rf $htvcenter_SERVER_STATE_DIR/htvcenter_pre_update*
	$htvcenter_SERVER_BASE_DIR/htvcenter/bin/htvcenter state backup -n htvcenter_pre_update
	# now we are save to update files and db
	# remove all old plugin php classes + tpl
	echo "  - Removing old plugins php classes"
	find $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/ -type f -wholename "*/plugins/*/web/class/*.class.php" -delete
	find $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/ -type f -wholename "*/plugins/*/web/tpl/*.tpl.php" -delete
	# clean web base + plugins
	find $htvcenter_SERVER_BASE_DIR/htvcenter/web/base/plugins/aa_plugins/ -type f -wholename "*/web/base/plugins/aa_plugins/class/*.class.php" -delete
	find $htvcenter_SERVER_BASE_DIR/htvcenter/web/base/plugins/aa_plugins/ -type f -wholename "*/web/base/plugins/aa_plugins/tpl/*.tpl.php" -delete
	find $htvcenter_SERVER_BASE_DIR/htvcenter/web/base/server/ -type f -wholename "*/web/base/server/*/class/*.class.php" -delete
	find $htvcenter_SERVER_BASE_DIR/htvcenter/web/base/server/ -type f -wholename "*/web/base/server/*/tpl/*.tpl.php" -delete
	# custom updates from htvcenter 4.9 to 5.0
	# clean up old/removed files
	rm -f $htvcenter_SERVER_BASE_DIR/htvcenter/web/boot-service/local-storage-state.php
	rm -f $htvcenter_SERVER_BASE_DIR/htvcenter/web/boot-service/root-mount.local-storage
	# custom updates from htvcenter 4.9 to 5.0
	rm -f $htvcenter_SERVER_BASE_DIR/htvcenter/web/base/server/aa_server/js/jqplot.donutRenderer.min.js
	return 0
}



function post_update() {
	echo "- Running post update phase"
	# keeping origin in state dir
	mv $htvcenter_SERVER_BASE_DIR/htvcenter_pre_update $htvcenter_SERVER_STATE_DIR/
	# restart htvcenter
	htvcenter_INIT=""
	if [ -x /etc/init.d/htvcenter ]; then
		htvcenter_INIT="/etc/init.d/htvcenter"
	elif [ -x /etc/init.d/htvcenter-enterprise ]; then
		htvcenter_INIT="/etc/init.d/htvcenter-enterprise"
	fi
	if [ "$htvcenter_INIT" != "" ]; then
		$htvcenter_INIT stop
	fi
	if [ -f $htvcenter_SERVER_BASE_DIR/htvcenter/web/base/unconfigured ]; then
		rm -f $htvcenter_SERVER_BASE_DIR/htvcenter/web/base/unconfigured
	fi
	$htvcenter_INIT start
	echo "- post update finished successfully"
}



function base_update() {
	echo "- Running base update phase"
	# re-source main config
	if [ ! -f "$htvcenter_SERVER_BASE_DIR/htvcenter_pre_update/etc/htvcenter-server.conf" ]; then
		echo "ERROR: Applying base-update before pre-update phase ! Trying to continue ..."
		sleep 5
		. $htvcenter_SERVER_BASE_DIR/htvcenter/etc/htvcenter-server.conf
	else
		. $htvcenter_SERVER_BASE_DIR/htvcenter_pre_update/etc/htvcenter-server.conf
	fi
	# source db-functions according db-type
	echo "- Database shema sanity check (databasetype $htvcenter_DATABASE_TYPE)"
	$htvcenter_SERVER_BASE_DIR/htvcenter/etc/db/$htvcenter_DATABASE_TYPE/htvcenter-$htvcenter_DATABASE_TYPE-functions update
	# wait to check by the user if not in force mode
	if [ "$FORCE_UPDATE" == "false" ]; then
		echo "=> Please press <ENTER> to go on"
		read
	fi

	# unpack all new boot-services
	for htvcenter_BOOTSERVICE in `find $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/ -name boot-service-*.tgz`; do
		htvcenter_BOOTSERVICE_FILENAME=`basename $htvcenter_BOOTSERVICE`
		htvcenter_BOOTSERVICE_DIRNAME=`dirname $htvcenter_BOOTSERVICE`
		rm -rf $htvcenter_BOOTSERVICE_DIRNAME/boot-service.tmp
		mkdir $htvcenter_BOOTSERVICE_DIRNAME/boot-service.tmp
		if ! tar -C $htvcenter_BOOTSERVICE_DIRNAME/boot-service.tmp -xzf $htvcenter_BOOTSERVICE; then
			echo "ERROR: Could not unpack boot-service $htvcenter_BOOTSERVICE !"
			sleep 5
			rm -rf $htvcenter_BOOTSERVICE_DIRNAME/boot-service.tmp
		fi
	done

	# unpack all old boot-services
	for htvcenter_OLD_BOOTSERVICE in `find $htvcenter_SERVER_BASE_DIR/htvcenter_pre_update/plugins/ -name boot-service-*.tgz`; do
		htvcenter_OLD_BOOTSERVICE_FILENAME=`basename $htvcenter_OLD_BOOTSERVICE`
		htvcenter_OLD_BOOTSERVICE_DIRNAME=`dirname $htvcenter_OLD_BOOTSERVICE`
		rm -rf $htvcenter_OLD_BOOTSERVICE_DIRNAME/boot-service.tmp
		mkdir $htvcenter_OLD_BOOTSERVICE_DIRNAME/boot-service.tmp
		if ! tar -C $htvcenter_OLD_BOOTSERVICE_DIRNAME/boot-service.tmp -xzf $htvcenter_OLD_BOOTSERVICE; then
			echo "ERROR: Could not unpack boot-service $htvcenter_OLD_BOOTSERVICE !"
			sleep 5
			rm -rf $htvcenter_OLD_BOOTSERVICE_DIRNAME/boot-service.tmp
		fi
	done

	# config file sanity check
	for htvcenter_CONF_FILE in `find $htvcenter_SERVER_BASE_DIR/htvcenter/ -name *.conf | cut -d'/' -f5-`; do
		if [ -f "$htvcenter_SERVER_BASE_DIR/htvcenter_pre_update/$htvcenter_CONF_FILE" ]; then
			echo "  - Checking config file $htvcenter_SERVER_BASE_DIR/htvcenter/$htvcenter_CONF_FILE"
			if ! diff $htvcenter_SERVER_BASE_DIR/htvcenter_pre_update/$htvcenter_CONF_FILE $htvcenter_SERVER_BASE_DIR/htvcenter/$htvcenter_CONF_FILE 1>/dev/null 2>/dev/null; then
				while (true); do
					echo "  - Changes detected for config file $htvcenter_SERVER_BASE_DIR/htvcenter/$htvcenter_CONF_FILE"
					if [ "$FORCE_UPDATE" == "false" ]; then
						echo "  - v - View changes"
						echo "  - a - Try to apply old configuration"
						echo "  - k - Apply new config file"
						echo

						read -n1 APPLY_OLD_CONFIG
						case "$APPLY_OLD_CONFIG" in
							v)
								echo "  - Displaying changes"
								echo
								if [ ! -f "$htvcenter_SERVER_BASE_DIR/htvcenter_pre_update/$htvcenter_CONF_FILE" ]; then
									echo "NOTICE: $htvcenter_SERVER_BASE_DIR/htvcenter_pre_update/$htvcenter_CONF_FILE does not exist"
								elif [ !-f "$htvcenter_SERVER_BASE_DIR/htvcenter/$htvcenter_CONF_FILE" ]; then
									echo "NOTICE: $htvcenter_SERVER_BASE_DIR/htvcenter/$htvcenter_CONF_FILE does not exist"
								else
									diff $htvcenter_SERVER_BASE_DIR/htvcenter_pre_update/$htvcenter_CONF_FILE $htvcenter_SERVER_BASE_DIR/htvcenter/$htvcenter_CONF_FILE
								fi
								;;
							a)
								echo "  - Trying to apply old configuration"
								htvcenter_apply_old_config  $htvcenter_SERVER_BASE_DIR/htvcenter/$htvcenter_CONF_FILE $htvcenter_SERVER_BASE_DIR/htvcenter_pre_update/$htvcenter_CONF_FILE
								echo
								break
								;;
							k)
								echo "   - Keeping new configuration"
								break
								;;
						esac
					else
						echo
						echo "  - Force enabled. Trying to apply old configuration"
						htvcenter_apply_old_config  $htvcenter_SERVER_BASE_DIR/htvcenter/$htvcenter_CONF_FILE $htvcenter_SERVER_BASE_DIR/htvcenter_pre_update/$htvcenter_CONF_FILE
						echo
						break
					fi
				done
			fi
		fi
	done

	# pack all new boot-services
	for htvcenter_BOOTSERVICE in `find $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/ -name boot-service-*.tgz`; do
		htvcenter_BOOTSERVICE_FILENAME=`basename $htvcenter_BOOTSERVICE`
		htvcenter_BOOTSERVICE_DIRNAME=`dirname $htvcenter_BOOTSERVICE`
		TIMESTAMP=`date +%s`
		mv -f $htvcenter_BOOTSERVICE $htvcenter_BOOTSERVICE.$TIMESTAMP
		cd $htvcenter_BOOTSERVICE_DIRNAME/boot-service.tmp/
		if ! tar -czf $htvcenter_BOOTSERVICE *; then
			echo "ERROR: Could not re-pack boot-service $htvcenter_BOOTSERVICE !"
			sleep 5
		fi
		cd - 1>/dev/null
		rm -rf $htvcenter_BOOTSERVICE_DIRNAME/boot-service.tmp
	done

	# clean up old boot-services
	for htvcenter_OLD_BOOTSERVICE in `find $htvcenter_SERVER_BASE_DIR/htvcenter_pre_update/plugins/ -name boot-service-*.tgz`; do
		htvcenter_OLD_BOOTSERVICE_FILENAME=`basename $htvcenter_OLD_BOOTSERVICE`
		htvcenter_OLD_BOOTSERVICE_DIRNAME=`dirname $htvcenter_OLD_BOOTSERVICE`
		rm -rf $htvcenter_OLD_BOOTSERVICE_DIRNAME/boot-service.tmp
	done

	# custom updates from htvcenter 4.6 to 4.7
	# link the tftpboot/boot dir to the boot-services
	rm -f $htvcenter_SERVER_BASE_DIR/htvcenter/web/boot-service/boot
	ln -sf $htvcenter_SERVER_BASE_DIR/htvcenter/tftpboot/boot/ $htvcenter_SERVER_BASE_DIR/htvcenter/web/boot-service/boot
	# custom update actions for various plugins
	$htvcenter_SERVER_BASE_DIR/htvcenter/plugins/cloud/bin/htvcenter-cloud-manager update-soap
	# update from 4.9 to 5.0 - lock for the command-queueu
	mkdir -p $htvcenter_SERVER_BASE_DIR/htvcenter/var/lock/
	chmod 777 $htvcenter_SERVER_BASE_DIR/htvcenter/var/lock/
	# update from 4.9 to 5.0 - upload dir
	mkdir -p $htvcenter_SERVER_BASE_DIR/htvcenter/web/base/tmp
	chmod 777 $htvcenter_SERVER_BASE_DIR/htvcenter/web/base/tmp
	# remove deprecated boot-services
	rm -f $htvcenter_SERVER_BASE_DIR/htvcenter/web/boot-service/boot-service-cloud.tgz
	rm -f $htvcenter_SERVER_BASE_DIR/htvcenter/web/boot-service/boot-service-linuxcoe.tgz
	# create htaccess files for storage and virt-stat dirs if not existing already
	for PLUGIN in `ls $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/`; do
		if [ -d $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/$PLUGIN/web/storage ]; then
			if [ ! -f $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/$PLUGIN/web/storage/.htaccess ]; then
				echo "Order deny,allow" > $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/$PLUGIN/web/storage/.htaccess
				echo "Deny from all" >> $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/$PLUGIN/web/storage/.htaccess
			fi
		fi
		if [ -d $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/$PLUGIN/web/$PLUGIN-stat ]; then
			if [ ! -f $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/$PLUGIN/web/$PLUGIN-stat/.htaccess ]; then
				echo "Order deny,allow" > $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/$PLUGIN/web/$PLUGIN-stat/.htaccess
				echo "Deny from all" >> $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/$PLUGIN/web/$PLUGIN-stat/.htaccess
			fi
		fi
	done
	# libvirt hosts need remote access to the storage and stat dir
	rm -f $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/libvirt/web/libvirt-stat/.htaccess
	rm -f $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/libvirt/web/storage/.htaccess
	# cleanup css
	find $htvcenter_SERVER_BASE_DIR/htvcenter/plugins/cloud/ -name calendar.css -delete

}




function initrd_update() {
	echo "- Updating initrds"
	CURRENT_UPDATE_DIR=`pwd`


	for INITRD_FILE in `ls $htvcenter_SERVER_BASE_DIR/htvcenter/tftpboot/boot/initrd-*.img`; do
		UPDATE_htvcenter_INITRD=false

		if [ "$FORCE_UPDATE" == "false" ]; then
			echo "    - y - Update $INITRD_FILE"
			echo "    - n - Skip update of $INITRD_FILE"
			echo
			read -n1 APPLY_INITRD_UPDATE

			case "$APPLY_INITRD_UPDATE" in
				y)
					echo "   - Updateing $INITRD_FILE"
					UPDATE_htvcenter_INITRD=true
					;;
				*)
					echo "   - Keeping old initrd $INITRD_FILE"
					UPDATE_htvcenter_INITRD=false
					;;
			esac
		else
			echo "   - Force enabled. Updateing $INITRD_FILE"
			UPDATE_htvcenter_INITRD=true
		fi

		if [ "$UPDATE_htvcenter_INITRD" == "true" ]; then
			INITRD_FILENAME=`basename $INITRD_FILE`
			rm -rf $htvcenter_SERVER_BASE_DIR/htvcenter/tftpboot/boot/htvcenter-initrd-update
			mkdir -p $htvcenter_SERVER_BASE_DIR/htvcenter/tftpboot/boot/htvcenter-initrd-update
			rm -f $htvcenter_SERVER_BASE_DIR/htvcenter/tftpboot/boot/htvcenter-initrd-update/$INITRD_FILENAME
			cp -f $INITRD_FILE $htvcenter_SERVER_BASE_DIR/htvcenter/tftpboot/boot/htvcenter-initrd-update/$INITRD_FILENAME.gz
			cd $htvcenter_SERVER_BASE_DIR/htvcenter/tftpboot/boot/htvcenter-initrd-update/
			# unpack
			if ! gunzip < $INITRD_FILENAME.gz | cpio --extract --preserve; then
				rm -rf $htvcenter_SERVER_BASE_DIR/htvcenter/tftpboot/boot/htvcenter-initrd-update
				echo "ERROR: Could not gunzip $INITRD_FILE. Continuing ..."
				continue
			fi
			rm -f $INITRD_FILENAME.gz
			# update linuxrc
			cp -af $htvcenter_SERVER_BASE_DIR/htvcenter//etc/templates/htvcenter-linuxrc init
			chmod +x init
			# pack again
			if ! find . | cpio -o -H newc | gzip -9 > $INITRD_FILE.new; then
				rm -f $INITRD_FILE.new
				rm -rf $htvcenter_SERVER_BASE_DIR/htvcenter/tftpboot/boot/htvcenter-initrd-update
				echo "ERROR: Could not re-pack $INITRD_FILE. Continuing ..."
				continue
			fi
			cp -f $INITRD_FILE.new $INITRD_FILE
			rm -f $INITRD_FILE.new
			# cleanup
			cd $CURRENT_UPDATE_DIR
			rm -rf $htvcenter_SERVER_BASE_DIR/htvcenter/tftpboot/boot/htvcenter-initrd-update
		fi
	done

}





# debug
# htvcenter_apply_old_config /usr/share/htvcenter/plugins/kvm/etc/htvcenter-plugin-kvm.conf /usr/share/htvcenter_pre_update/plugins/kvm/etc/htvcenter-plugin-kvm.conf

if [ "$2" == "-f" ]; then
	export FORCE_UPDATE=true
else
	export FORCE_UPDATE=false
fi


# main
case "$1" in
	pre)
		pre_update
		;;
	post)
		post_update
		;;
	base)
		base_update
		;;
	initrds)
		initrd_update
		;;
	*)
		update_usage
		;;
esac











